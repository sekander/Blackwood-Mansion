{"ast":null,"code":"var _jsxFileName = \"/home/fnky/C0de/School/Special-Topics/Blackwood-Mansion/src/components/Chapters/Chapter1.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Modal from 'react-modal';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst placeholderImages = [{\n  id: 1,\n  name: 'Card 1',\n  image: '/placeholder1.jpg'\n}, {\n  id: 2,\n  name: 'Card 2',\n  image: '/placeholder2.jpg'\n}, {\n  id: 3,\n  name: 'Card 3',\n  image: '/placeholder3.jpg'\n}];\nconst Chapter1 = () => {\n  _s();\n  const [cardData, setCardData] = useState([...placeholderImages]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [jsonData, setJsonData] = useState([]);\n  const lastScanTime = useRef(0);\n  const scanDelay = 3000; // 3 seconds between scans\n  const scannerRef = useRef(null);\n  const handleScan = data => {\n    const now = Date.now();\n    if (data && now - lastScanTime.current > scanDelay) {\n      lastScanTime.current = now;\n      try {\n        const parsed = JSON.parse(data);\n        if (!Array.isArray(parsed)) throw new Error('QR JSON must be an array');\n        setJsonData(parsed);\n        const updated = cardData.map(card => {\n          const match = parsed.find(item => item.id === card.id);\n          return match ? {\n            ...card,\n            name: match.name,\n            image: match.image\n          } : card;\n        });\n        setCardData(updated);\n        setIsModalOpen(false); // Close modal after scan and update\n      } catch (e) {\n        console.error('Failed to parse QR code:', e);\n      }\n    }\n  };\n  const handleError = err => {\n    console.error('QR Reader Error:', err);\n  };\n  useEffect(() => {\n    if (isModalOpen && !scannerRef.current) {\n      scannerRef.current = new Html5QrcodeScanner('qr-reader', {\n        fps: 10,\n        qrbox: 250\n      }, false);\n      scannerRef.current.render(handleScan, handleError);\n    }\n    return () => {\n      var _scannerRef$current;\n      (_scannerRef$current = scannerRef.current) === null || _scannerRef$current === void 0 ? void 0 : _scannerRef$current.clear().catch(console.error);\n      scannerRef.current = null;\n    };\n  }, [isModalOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chapter 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '1rem'\n      },\n      children: cardData.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.image,\n          alt: card.name,\n          width: 200,\n          height: 200,\n          onClick: () => setIsModalOpen(true),\n          style: {\n            cursor: 'pointer',\n            border: '1px solid #ccc',\n            padding: '0.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Scan QR\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scan QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"qr-reader\",\n        style: {\n          width: '300px',\n          height: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), jsonData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scanned Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), jsonData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", item.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Image: \", item.image]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Chapter1, \"aV+hIYyz5AImQNhOk50nPxFwGPQ=\");\n_c = Chapter1;\nexport default Chapter1;\nvar _c;\n$RefreshReg$(_c, \"Chapter1\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","Html5QrcodeScanner","jsxDEV","_jsxDEV","setAppElement","placeholderImages","id","name","image","Chapter1","_s","cardData","setCardData","isModalOpen","setIsModalOpen","jsonData","setJsonData","lastScanTime","scanDelay","scannerRef","handleScan","data","now","Date","current","parsed","JSON","parse","Array","isArray","Error","updated","map","card","match","find","item","e","console","error","handleError","err","fps","qrbox","render","_scannerRef$current","clear","catch","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","index","src","alt","width","height","onClick","cursor","border","isOpen","onRequestClose","contentLabel","length","marginTop","marginBottom","_c","$RefreshReg$"],"sources":["/home/fnky/C0de/School/Special-Topics/Blackwood-Mansion/src/components/Chapters/Chapter1.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Modal from 'react-modal';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\n\nModal.setAppElement('#root');\n\ninterface Card {\n  id: number;\n  name: string;\n  image: string;\n}\n\nconst placeholderImages: Card[] = [\n  { id: 1, name: 'Card 1', image: '/placeholder1.jpg' },\n  { id: 2, name: 'Card 2', image: '/placeholder2.jpg' },\n  { id: 3, name: 'Card 3', image: '/placeholder3.jpg' },\n];\n\nconst Chapter1: React.FC = () => {\n  const [cardData, setCardData] = useState<Card[]>([...placeholderImages]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [jsonData, setJsonData] = useState<any[]>([]);\n  const lastScanTime = useRef<number>(0);\n  const scanDelay = 3000; // 3 seconds between scans\n  const scannerRef = useRef<Html5QrcodeScanner | null>(null);\n\n  const handleScan = (data: string | null) => {\n    const now = Date.now();\n    if (data && now - lastScanTime.current > scanDelay) {\n      lastScanTime.current = now;\n      try {\n        const parsed = JSON.parse(data);\n        if (!Array.isArray(parsed)) throw new Error('QR JSON must be an array');\n        setJsonData(parsed);\n\n        const updated = cardData.map(card => {\n          const match = parsed.find((item: any) => item.id === card.id);\n          return match ? { ...card, name: match.name, image: match.image } : card;\n        });\n\n        setCardData(updated);\n        setIsModalOpen(false); // Close modal after scan and update\n      } catch (e) {\n        console.error('Failed to parse QR code:', e);\n      }\n    }\n  };\n\n  const handleError = (err: any) => {\n    console.error('QR Reader Error:', err);\n  };\n\n  useEffect(() => {\n    if (isModalOpen && !scannerRef.current) {\n      scannerRef.current = new Html5QrcodeScanner('qr-reader', { fps: 10, qrbox: 250 }, false);\n      scannerRef.current.render(handleScan, handleError);\n    }\n\n    return () => {\n      scannerRef.current?.clear().catch(console.error);\n      scannerRef.current = null;\n    };\n  }, [isModalOpen]);\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h2>Chapter 1</h2>\n\n      <div style={{ display: 'flex', gap: '1rem' }}>\n        {cardData.map((card, index) => (\n          <div key={index}>\n            <img\n              src={card.image}\n              alt={card.name}\n              width={200}\n              height={200}\n              onClick={() => setIsModalOpen(true)}\n              style={{ cursor: 'pointer', border: '1px solid #ccc', padding: '0.5rem' }}\n            />\n            <p>{card.name}</p>\n          </div>\n        ))}\n      </div>\n\n      <Modal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)} contentLabel=\"Scan QR\">\n        <h2>Scan QR Code</h2>\n        <div id=\"qr-reader\" style={{ width: '300px', height: '300px' }} />\n        <button onClick={() => setIsModalOpen(false)}>Close</button>\n      </Modal>\n\n      {jsonData.length > 0 && (\n        <div style={{ marginTop: '2rem' }}>\n          <h3>Scanned Data:</h3>\n          {jsonData.map((item, index) => (\n            <div key={index} style={{ marginBottom: '1rem' }}>\n              <p>ID: {item.id}</p>\n              <p>Name: {item.name}</p>\n              <p>Image: {item.image}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chapter1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}