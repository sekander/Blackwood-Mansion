{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CardContext=/*#__PURE__*/createContext(undefined);export const useCardContext=()=>{const context=useContext(CardContext);if(!context){throw new Error('useCardContext must be used within a CardProvider');}return context;};const cardSet1=[{id:1,image:'/fall_object.webp',name:'Fallen Object',audio:'../../asset/audio/bones-scream.mp3',qrcode:''},{id:2,image:'/whisper_image.webp',name:'Suspicious Whispers',audio:'../../asset/audio/fart.mp3',qrcode:''},{id:3,image:'/bloody_knife.png',name:'Bloody Knife',audio:'../../asset/audio/fart.mp3',qrcode:''},{id:4,image:'/torn_curtain.png',name:'Torn Curtain',audio:'../../asset/audio/fart.mp3',qrcode:''},{id:5,image:'/locked_diary.png',name:'Locked Diary',audio:'../../asset/audio/fart.mp3',qrcode:''}];const cardSet2=[{id:6,image:'/ghost.png',name:'Ghost',audio:'../../asset/audio/ghost.mp3',qrcode:''},{id:7,image:'/mirror.png',name:'Broken Mirror',audio:'../../asset/audio/glass.mp3',qrcode:''},{id:8,image:'/shadow.png',name:'Creepy Shadow',audio:'../../asset/audio/shadow.mp3',qrcode:''},{id:9,image:'/clown.png',name:'Scary Clown',audio:'../../asset/audio/clown.mp3',qrcode:''},{id:10,image:'/doll.png',name:'Haunted Doll',audio:'../../asset/audio/doll.mp3',qrcode:''}];const cardSet3=[{id:11,image:'/grave.png',name:'Graveyard',audio:'../../asset/audio/grave.mp3',qrcode:''},{id:12,image:'/bat.png',name:'Flying Bat',audio:'../../asset/audio/bat.mp3',qrcode:''},{id:13,image:'/zombie.png',name:'Zombie',audio:'../../asset/audio/zombie.mp3',qrcode:''},{id:14,image:'/fog.png',name:'Thick Fog',audio:'../../asset/audio/fog.mp3',qrcode:''},{id:15,image:'/clock.png',name:'Broken Clock',audio:'../../asset/audio/clock.mp3',qrcode:''}];const getCardSet=type=>{switch(type){case'set1':return cardSet1;case'set2':return cardSet2;case'set3':return cardSet3;default:return cardSet1;}};export const CardProvider=_ref=>{let{children}=_ref;const[cardSetType,setCardSetType]=useState('set1');const[clickOrder,setClickOrder]=useState([]);const cardData=getCardSet(cardSetType);const setCardSet=type=>{setCardSetType(type);setClickOrder([]);};const handleTempArr=card=>{if(clickOrder.length<cardData.length){if(!clickOrder.includes(card.id)){setClickOrder([...clickOrder,card.id]);}else{console.log(`Card ${card.id} already clicked.`);}}};const checkOrder=array=>{const orders={set1:[2,5,3,1,4],set2:[6,10,7,8,9],set3:[12,15,11,13,14]};const correctOrder=orders[cardSetType];const isCorrect=correctOrder.every((val,index)=>val===array[index]);if(isCorrect){alert('Order is correct');}else{alert('Order is NOT correct');setClickOrder([]);}};const getCardNumber=cardId=>{const index=clickOrder.indexOf(cardId);return index>=0?index+1:null;};return/*#__PURE__*/_jsx(CardContext.Provider,{value:{cardData,setCardSet,currentArray:clickOrder,handleTempArr,checkOrder,getCardNumber},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","CardContext","undefined","useCardContext","context","Error","cardSet1","id","image","name","audio","qrcode","cardSet2","cardSet3","getCardSet","type","CardProvider","_ref","children","cardSetType","setCardSetType","clickOrder","setClickOrder","cardData","setCardSet","handleTempArr","card","length","includes","console","log","checkOrder","array","orders","set1","set2","set3","correctOrder","isCorrect","every","val","index","alert","getCardNumber","cardId","indexOf","Provider","value","currentArray"],"sources":["/home/fnky/C0de/School/Special-Topics/Blackwood-Mansion/src/components/CardContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nexport interface Card {\n  id: number;\n  image: string;\n  name: string;\n  audio: string;\n  qrcode: string;\n}\n\ntype CardSetType = 'set1' | 'set2' | 'set3';\n\ninterface CardContextProps {\n  cardData: Card[];\n  setCardSet: (type: CardSetType) => void;\n  currentArray: number[];\n  handleTempArr: (card: Card) => void;\n  checkOrder: (array: number[]) => void;\n  getCardNumber: (cardId: number) => number | null;\n}\n\nconst CardContext = createContext<CardContextProps | undefined>(undefined);\n\nexport const useCardContext = (): CardContextProps => {\n  const context = useContext(CardContext);\n  if (!context) {\n    throw new Error('useCardContext must be used within a CardProvider');\n  }\n  return context;\n};\n\nconst cardSet1: Card[] = [\n  { id: 1, image: '/fall_object.webp', name: 'Fallen Object', audio: '../../asset/audio/bones-scream.mp3', qrcode: '' },\n  { id: 2, image: '/whisper_image.webp', name: 'Suspicious Whispers', audio: '../../asset/audio/fart.mp3', qrcode: '' },\n  { id: 3, image: '/bloody_knife.png', name: 'Bloody Knife', audio: '../../asset/audio/fart.mp3', qrcode: '' },\n  { id: 4, image: '/torn_curtain.png', name: 'Torn Curtain', audio: '../../asset/audio/fart.mp3', qrcode: '' },\n  { id: 5, image: '/locked_diary.png', name: 'Locked Diary', audio: '../../asset/audio/fart.mp3', qrcode: '' },\n];\n\nconst cardSet2: Card[] = [\n  { id: 6, image: '/ghost.png', name: 'Ghost', audio: '../../asset/audio/ghost.mp3', qrcode: '' },\n  { id: 7, image: '/mirror.png', name: 'Broken Mirror', audio: '../../asset/audio/glass.mp3', qrcode: '' },\n  { id: 8, image: '/shadow.png', name: 'Creepy Shadow', audio: '../../asset/audio/shadow.mp3', qrcode: '' },\n  { id: 9, image: '/clown.png', name: 'Scary Clown', audio: '../../asset/audio/clown.mp3', qrcode: '' },\n  { id: 10, image: '/doll.png', name: 'Haunted Doll', audio: '../../asset/audio/doll.mp3', qrcode: '' },\n];\n\nconst cardSet3: Card[] = [\n  { id: 11, image: '/grave.png', name: 'Graveyard', audio: '../../asset/audio/grave.mp3', qrcode: '' },\n  { id: 12, image: '/bat.png', name: 'Flying Bat', audio: '../../asset/audio/bat.mp3', qrcode: '' },\n  { id: 13, image: '/zombie.png', name: 'Zombie', audio: '../../asset/audio/zombie.mp3', qrcode: '' },\n  { id: 14, image: '/fog.png', name: 'Thick Fog', audio: '../../asset/audio/fog.mp3', qrcode: '' },\n  { id: 15, image: '/clock.png', name: 'Broken Clock', audio: '../../asset/audio/clock.mp3', qrcode: '' },\n];\n\nconst getCardSet = (type: CardSetType): Card[] => {\n  switch (type) {\n    case 'set1':\n      return cardSet1;\n    case 'set2':\n      return cardSet2;\n    case 'set3':\n      return cardSet3;\n    default:\n      return cardSet1;\n  }\n};\n\nexport const CardProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [cardSetType, setCardSetType] = useState<CardSetType>('set1');\n  const [clickOrder, setClickOrder] = useState<number[]>([]);\n\n  const cardData = getCardSet(cardSetType);\n\n  const setCardSet = (type: CardSetType) => {\n    setCardSetType(type);\n    setClickOrder([]);\n  };\n\n  const handleTempArr = (card: Card) => {\n    if (clickOrder.length < cardData.length) {\n      if (!clickOrder.includes(card.id)) {\n        setClickOrder([...clickOrder, card.id]);\n      } else {\n        console.log(`Card ${card.id} already clicked.`);\n      }\n    }\n  };\n\n  const checkOrder = (array: number[]) => {\n    const orders: Record<CardSetType, number[]> = {\n      set1: [2, 5, 3, 1, 4],\n      set2: [6, 10, 7, 8, 9],\n      set3: [12, 15, 11, 13, 14],\n    };\n    const correctOrder = orders[cardSetType];\n    const isCorrect = correctOrder.every((val, index) => val === array[index]);\n\n    if (isCorrect) {\n      alert('Order is correct');\n    } else {\n      alert('Order is NOT correct');\n      setClickOrder([]);\n    }\n  };\n\n  const getCardNumber = (cardId: number): number | null => {\n    const index = clickOrder.indexOf(cardId);\n    return index >= 0 ? index + 1 : null;\n  };\n\n  return (\n    <CardContext.Provider\n      value={{\n        cardData,\n        setCardSet,\n        currentArray: clickOrder,\n        handleTempArr,\n        checkOrder,\n        getCardNumber,\n      }}\n    >\n      {children}\n    </CardContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}