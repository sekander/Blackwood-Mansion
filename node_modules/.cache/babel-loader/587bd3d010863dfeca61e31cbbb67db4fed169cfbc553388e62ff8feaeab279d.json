{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import styled from'styled-components';import{TypeAnimation}from'react-type-animation';import Modal from'react-modal';import{Html5QrcodeScanner}from'html5-qrcode';// Import the QR code scanner\nimport{useScreenVisibility}from'../ScreenVisibilityContext';import Carousel from'react-spring-3d-carousel';import{config}from'react-spring';import{useCardContext}from'../CardContext';// import { useCardContext } from '../CardContext';\n// Set Modal app element for accessibility\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";Modal.setAppElement('#root');const CardContainer=styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;// Define types for QR Reader props\n// Create the QrReader component\nconst QrReader=_ref=>{let{delay,style,onError,onScan}=_ref;const qrScannerRef=useRef(null);useEffect(()=>{if(qrScannerRef.current){// Initialize the Html5QrcodeScanner with the ID of the element\nconst qrCodeScanner=new Html5QrcodeScanner(\"qr-reader\",// Pass the ID of the div element\n{fps:10,// Frames per second, control the scan speed\nqrbox:250// Size of the scanning box\n},false);// Start the QR scanner\nqrCodeScanner.render(decodedText=>{onScan(decodedText);// Handle successful scan\n},error=>{onError(error);// Handle error\n});// Clean up the QR scanner when the component unmounts\nreturn()=>{qrCodeScanner.clear();};}},[onScan,onError]);return/*#__PURE__*/_jsx(\"div\",{style:style,children:/*#__PURE__*/_jsx(\"div\",{ref:qrScannerRef,id:\"qr-reader\",style:{width:'100%',height:'100%'}})});};const Chapter1=()=>{const[showModal,setShowModal]=useState(false);// Modal visibility state\nconst[scanData,setScanData]=useState('Not Found');// State to store scan results\nconst[jsonData,setJsonData]=useState(null);// State to store the JSON response\nconst{screenVisibility,handleScreen}=useScreenVisibility();const{cardData,handleTempArr,checkOrder,getCardNumber,currentArray}=useCardContext();const[goToSlide,setGoToSlide]=useState(undefined);// Open and close modal functions\nconst openModal=()=>setShowModal(true);const closeModal=()=>setShowModal(false);const goBackToMain=()=>handleScreen('main');const goToChapter2=()=>handleScreen('chapter_2');const handleCardClick=cardIndex=>{handleTempArr(cardData[cardIndex]);setShowModal(true);};const carouselSlides=cardData.map((card,index)=>({key:index,content:/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleCardClick(index),className:\"flex flex-col items-center justify-center bg-white shadow-lg rounded p-4 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"img\",{src:card.image,alt:card.name,style:{width:'200px',height:'200px'},className:\"w-64 h-64 object-contain\"}),/*#__PURE__*/_jsx(\"span\",{className:\"mt-2 text-xl\",children:getCardNumber(card.id)}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-gray-600\",children:card.name})]}),onClick:()=>setGoToSlide(index)}));return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to Chapter 1!\"}),/*#__PURE__*/_jsx(TypeAnimation,{sequence:[\"It was a dark, stormy evening when the call came in. A nervous voice on the other end, trembling with something deeper than fear. The caretaker of Blackwood Mansion desperate for help. The house, passed down through generations, held more than memories. It held shadows. Secrets buried beneath its foundations. And now... something had begun to stir.\",1000],speed:50}),/*#__PURE__*/_jsx(\"button\",{onClick:openModal,className:\"mt-4 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",children:\"Open QR Code Modal\"}),/*#__PURE__*/_jsxs(Modal,{isOpen:showModal,onRequestClose:closeModal,contentLabel:\"QR Code Modal\",className:\"modal-content\",overlayClassName:\"modal-overlay\",closeTimeoutMS:200// Smooth fade-out\n,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"modal-title\",children:\"\\uD83E\\uDE9F QR Code Scanner\"}),/*#__PURE__*/_jsx(\"button\",{onClick:closeModal,className:\"close-btn\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"qr-reader\",style:{width:'300px',height:'300px'},children:/*#__PURE__*/_jsx(QrReader,{delay:300,style:{width:'100%'},onError:err=>console.error('QR scan error',err)// Error handling\n,onScan:data=>{if(data){setScanData(data);// Update the scanned data state\nconsole.log('Scanned data:',data);}}})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Scanned Data: \",scanData]}),\" \",jsonData?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Fetched Data:\"}),/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(jsonData,null,2)})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No data fetched yet.\"})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:'500px',height:'400px',margin:'40px auto'},children:/*#__PURE__*/_jsx(Carousel,{slides:carouselSlides,goToSlide:goToSlide// `undefined` is now a valid value here\n,offsetRadius:2,showNavigation:true,animationConfig:config.gentle})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(currentArray.length===cardData.length){checkOrder(currentArray);}else{alert('Please click all cards first.');}},children:\"Check Order\"}),/*#__PURE__*/_jsx(\"button\",{onClick:goBackToMain,children:\"Back to Main\"}),/*#__PURE__*/_jsx(\"button\",{onClick:goToChapter2,children:\"Go to Chapter 2\"})]});};export default Chapter1;","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","TypeAnimation","Modal","Html5QrcodeScanner","useScreenVisibility","Carousel","config","useCardContext","jsx","_jsx","jsxs","_jsxs","setAppElement","CardContainer","div","QrReader","_ref","delay","style","onError","onScan","qrScannerRef","current","qrCodeScanner","fps","qrbox","render","decodedText","error","clear","children","ref","id","width","height","Chapter1","showModal","setShowModal","scanData","setScanData","jsonData","setJsonData","screenVisibility","handleScreen","cardData","handleTempArr","checkOrder","getCardNumber","currentArray","goToSlide","setGoToSlide","undefined","openModal","closeModal","goBackToMain","goToChapter2","handleCardClick","cardIndex","carouselSlides","map","card","index","key","content","onClick","className","src","image","alt","name","sequence","speed","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","err","console","data","log","JSON","stringify","margin","slides","offsetRadius","showNavigation","animationConfig","gentle","length","alert"],"sources":["/home/fnky/C0de/School/Special-Topics/Blackwood-Mansion/src/components/Chapters/Chapter1.tsx"],"sourcesContent":["import React, { CSSProperties, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { TypeAnimation } from 'react-type-animation';\nimport Modal from 'react-modal';\nimport { Html5QrcodeScanner } from 'html5-qrcode'; // Import the QR code scanner\nimport { useScreenVisibility } from '../ScreenVisibilityContext';\nimport Carousel from 'react-spring-3d-carousel';\nimport { config } from 'react-spring';\nimport { useCardContext } from '../CardContext';\n\n\n// import { useCardContext } from '../CardContext';\n// Set Modal app element for accessibility\nModal.setAppElement('#root');\n\nconst CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\n// Define types for QR Reader props\ninterface QrReaderProps {\n  delay: number;\n  style: CSSProperties;\n  onError: (err: any) => void;\n  onScan: (data: string | null) => void;\n}\n\n// Create the QrReader component\nconst QrReader: React.FC<QrReaderProps> = ({ delay, style, onError, onScan }) => {\n  const qrScannerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (qrScannerRef.current) {\n      // Initialize the Html5QrcodeScanner with the ID of the element\n      const qrCodeScanner = new Html5QrcodeScanner(\n        \"qr-reader\", // Pass the ID of the div element\n        {\n          fps: 10, // Frames per second, control the scan speed\n          qrbox: 250, // Size of the scanning box\n        },\n        false\n      );\n\n      // Start the QR scanner\n      qrCodeScanner.render(\n        (decodedText: string) => {\n          onScan(decodedText); // Handle successful scan\n        },\n        (error: string) => {\n          onError(error); // Handle error\n        }\n      );\n\n      // Clean up the QR scanner when the component unmounts\n      return () => {\n        qrCodeScanner.clear();\n      };\n    }\n  }, [onScan, onError]);\n\n  return (\n    <div style={style}>\n      {/* Add the id to the div */}\n      <div ref={qrScannerRef} id=\"qr-reader\" style={{ width: '100%', height: '100%' }}></div>\n    </div>\n  );\n};\n\nconst Chapter1: React.FC = () => {\n  const [showModal, setShowModal] = useState(false); // Modal visibility state\n  const [scanData, setScanData] = useState<string>('Not Found'); // State to store scan results\n  const [jsonData, setJsonData] = useState<any>(null); // State to store the JSON response\n\n  const { screenVisibility, handleScreen } = useScreenVisibility();\n  const {\n    cardData,\n    handleTempArr,\n    checkOrder,\n    getCardNumber,\n    currentArray,\n  } = useCardContext();\n\n  const [goToSlide, setGoToSlide] = useState<number | undefined>(undefined);\n\n\n  // Open and close modal functions\n  const openModal = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n\n\n  const goBackToMain = () => handleScreen('main');\n  const goToChapter2 = () => handleScreen('chapter_2');\n\n  const handleCardClick = (cardIndex: number) => {\n    handleTempArr(cardData[cardIndex]);\n    setShowModal(true);\n  };\n\n  const carouselSlides = cardData.map((card, index) => ({\n    key: index,\n    content: (\n      <div\n        onClick={() => handleCardClick(index)}\n        className=\"flex flex-col items-center justify-center bg-white shadow-lg rounded p-4 cursor-pointer\"\n      >\n        <img\n          src={card.image}\n          alt={card.name}\n          style={{ width: '200px', height: '200px' }}\n          className=\"w-64 h-64 object-contain\"\n        />\n        <span className=\"mt-2 text-xl\">{getCardNumber(card.id)}</span>\n        <p className=\"mt-1 text-gray-600\">{card.name}</p>\n      </div>\n    ),\n    onClick: () => setGoToSlide(index),\n  }));\n\n  return (\n    <div>\n      <h1>Welcome to Chapter 1!</h1>\n      <TypeAnimation\n        sequence={[\n          \"It was a dark, stormy evening when the call came in. A nervous voice on the other end, trembling with something deeper than fear. The caretaker of Blackwood Mansion desperate for help. The house, passed down through generations, held more than memories. It held shadows. Secrets buried beneath its foundations. And now... something had begun to stir.\",\n          1000,\n        ]}\n        speed={50}\n      />\n\n      {/* Button to trigger the modal */}\n      <button\n        onClick={openModal}\n        className=\"mt-4 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\n      >\n        Open QR Code Modal\n      </button>\n\n      {/* Modal Component */}\n      <Modal\n        isOpen={showModal}\n        onRequestClose={closeModal}\n        contentLabel=\"QR Code Modal\"\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        closeTimeoutMS={200} // Smooth fade-out\n      >\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\">🪟 QR Code Scanner</h2>\n          <button onClick={closeModal} className=\"close-btn\">\n            ✕\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div id=\"qr-reader\" style={{ width: '300px', height: '300px' }}>\n            {/* QR Reader Component */}\n            <QrReader\n              delay={300}\n              style={{ width: '100%' }}\n              onError={(err) => console.error('QR scan error', err)} // Error handling\n              onScan={(data: string | null) => {\n                if (data) {\n                  setScanData(data); // Update the scanned data state\n                  console.log('Scanned data:', data);\n                }\n              }}\n            />\n          </div>\n\n          <p>Scanned Data: {scanData}</p> {/* Display scanned data */}\n\n\n          {/* Display the fetched JSON data */}\n          {jsonData ? (\n            <div>\n              <h3>Fetched Data:</h3>\n              <pre>{JSON.stringify(jsonData, null, 2)}</pre>\n            </div>\n          ) : (\n            <p>No data fetched yet.</p>\n          )}\n\n        </div>\n      </Modal>\n\n\n\n      <div style={{ width: '500px', height: '400px', margin: '40px auto' }}>\n        <Carousel\n          slides={carouselSlides}\n          goToSlide={goToSlide} // `undefined` is now a valid value here\n          offsetRadius={2}\n          showNavigation={true}\n          animationConfig={config.gentle}\n        />\n      </div>\n\n      <button\n        onClick={() => {\n          if (currentArray.length === cardData.length) {\n            checkOrder(currentArray);\n          } else {\n            alert('Please click all cards first.');\n          }\n        }}\n      >\n        Check Order\n      </button>\n\n      <button onClick={goBackToMain}>Back to Main</button>\n      <button onClick={goToChapter2}>Go to Chapter 2</button>\n\n\n\n    </div>\n  );\n};\n\nexport default Chapter1;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAmBC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CACzE,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,aAAa,KAAQ,sBAAsB,CACpD,MAAO,CAAAC,KAAK,KAAM,aAAa,CAC/B,OAASC,kBAAkB,KAAQ,cAAc,CAAE;AACnD,OAASC,mBAAmB,KAAQ,4BAA4B,CAChE,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAC/C,OAASC,MAAM,KAAQ,cAAc,CACrC,OAASC,cAAc,KAAQ,gBAAgB,CAG/C;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACAT,KAAK,CAACU,aAAa,CAAC,OAAO,CAAC,CAE5B,KAAM,CAAAC,aAAa,CAAGb,MAAM,CAACc,GAAG;AAChC;AACA;AACA,CAAC,CAED;AAQA;AACA,KAAM,CAAAC,QAAiC,CAAGC,IAAA,EAAuC,IAAtC,CAAEC,KAAK,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAO,CAAC,CAAAJ,IAAA,CAC1E,KAAM,CAAAK,YAAY,CAAGvB,MAAM,CAAwB,IAAI,CAAC,CAExDD,SAAS,CAAC,IAAM,CACd,GAAIwB,YAAY,CAACC,OAAO,CAAE,CACxB;AACA,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAApB,kBAAkB,CAC1C,WAAW,CAAE;AACb,CACEqB,GAAG,CAAE,EAAE,CAAE;AACTC,KAAK,CAAE,GAAK;AACd,CAAC,CACD,KACF,CAAC,CAED;AACAF,aAAa,CAACG,MAAM,CACjBC,WAAmB,EAAK,CACvBP,MAAM,CAACO,WAAW,CAAC,CAAE;AACvB,CAAC,CACAC,KAAa,EAAK,CACjBT,OAAO,CAACS,KAAK,CAAC,CAAE;AAClB,CACF,CAAC,CAED;AACA,MAAO,IAAM,CACXL,aAAa,CAACM,KAAK,CAAC,CAAC,CACvB,CAAC,CACH,CACF,CAAC,CAAE,CAACT,MAAM,CAAED,OAAO,CAAC,CAAC,CAErB,mBACEV,IAAA,QAAKS,KAAK,CAAEA,KAAM,CAAAY,QAAA,cAEhBrB,IAAA,QAAKsB,GAAG,CAAEV,YAAa,CAACW,EAAE,CAAC,WAAW,CAACd,KAAK,CAAE,CAAEe,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAM,CAAC,CACpF,CAAC,CAEV,CAAC,CAED,KAAM,CAAAC,QAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGtC,QAAQ,CAAC,KAAK,CAAC,CAAE;AACnD,KAAM,CAACuC,QAAQ,CAAEC,WAAW,CAAC,CAAGxC,QAAQ,CAAS,WAAW,CAAC,CAAE;AAC/D,KAAM,CAACyC,QAAQ,CAAEC,WAAW,CAAC,CAAG1C,QAAQ,CAAM,IAAI,CAAC,CAAE;AAErD,KAAM,CAAE2C,gBAAgB,CAAEC,YAAa,CAAC,CAAGvC,mBAAmB,CAAC,CAAC,CAChE,KAAM,CACJwC,QAAQ,CACRC,aAAa,CACbC,UAAU,CACVC,aAAa,CACbC,YACF,CAAC,CAAGzC,cAAc,CAAC,CAAC,CAEpB,KAAM,CAAC0C,SAAS,CAAEC,YAAY,CAAC,CAAGnD,QAAQ,CAAqBoD,SAAS,CAAC,CAGzE;AACA,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAMf,YAAY,CAAC,IAAI,CAAC,CAC1C,KAAM,CAAAgB,UAAU,CAAGA,CAAA,GAAMhB,YAAY,CAAC,KAAK,CAAC,CAG5C,KAAM,CAAAiB,YAAY,CAAGA,CAAA,GAAMX,YAAY,CAAC,MAAM,CAAC,CAC/C,KAAM,CAAAY,YAAY,CAAGA,CAAA,GAAMZ,YAAY,CAAC,WAAW,CAAC,CAEpD,KAAM,CAAAa,eAAe,CAAIC,SAAiB,EAAK,CAC7CZ,aAAa,CAACD,QAAQ,CAACa,SAAS,CAAC,CAAC,CAClCpB,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED,KAAM,CAAAqB,cAAc,CAAGd,QAAQ,CAACe,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,IAAM,CACpDC,GAAG,CAAED,KAAK,CACVE,OAAO,cACLpD,KAAA,QACEqD,OAAO,CAAEA,CAAA,GAAMR,eAAe,CAACK,KAAK,CAAE,CACtCI,SAAS,CAAC,yFAAyF,CAAAnC,QAAA,eAEnGrB,IAAA,QACEyD,GAAG,CAAEN,IAAI,CAACO,KAAM,CAChBC,GAAG,CAAER,IAAI,CAACS,IAAK,CACfnD,KAAK,CAAE,CAAEe,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,OAAQ,CAAE,CAC3C+B,SAAS,CAAC,0BAA0B,CACrC,CAAC,cACFxD,IAAA,SAAMwD,SAAS,CAAC,cAAc,CAAAnC,QAAA,CAAEiB,aAAa,CAACa,IAAI,CAAC5B,EAAE,CAAC,CAAO,CAAC,cAC9DvB,IAAA,MAAGwD,SAAS,CAAC,oBAAoB,CAAAnC,QAAA,CAAE8B,IAAI,CAACS,IAAI,CAAI,CAAC,EAC9C,CACN,CACDL,OAAO,CAAEA,CAAA,GAAMd,YAAY,CAACW,KAAK,CACnC,CAAC,CAAC,CAAC,CAEH,mBACElD,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BrB,IAAA,CAACR,aAAa,EACZqE,QAAQ,CAAE,CACR,gWAAgW,CAChW,IAAI,CACJ,CACFC,KAAK,CAAE,EAAG,CACX,CAAC,cAGF9D,IAAA,WACEuD,OAAO,CAAEZ,SAAU,CACnBa,SAAS,CAAC,mEAAmE,CAAAnC,QAAA,CAC9E,oBAED,CAAQ,CAAC,cAGTnB,KAAA,CAACT,KAAK,EACJsE,MAAM,CAAEpC,SAAU,CAClBqC,cAAc,CAAEpB,UAAW,CAC3BqB,YAAY,CAAC,eAAe,CAC5BT,SAAS,CAAC,eAAe,CACzBU,gBAAgB,CAAC,eAAe,CAChCC,cAAc,CAAE,GAAK;AAAA,CAAA9C,QAAA,eAErBnB,KAAA,QAAKsD,SAAS,CAAC,cAAc,CAAAnC,QAAA,eAC3BrB,IAAA,OAAIwD,SAAS,CAAC,aAAa,CAAAnC,QAAA,CAAC,8BAAkB,CAAI,CAAC,cACnDrB,IAAA,WAAQuD,OAAO,CAAEX,UAAW,CAACY,SAAS,CAAC,WAAW,CAAAnC,QAAA,CAAC,QAEnD,CAAQ,CAAC,EACN,CAAC,cACNnB,KAAA,QAAKsD,SAAS,CAAC,YAAY,CAAAnC,QAAA,eACzBrB,IAAA,QAAKuB,EAAE,CAAC,WAAW,CAACd,KAAK,CAAE,CAAEe,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,OAAQ,CAAE,CAAAJ,QAAA,cAE7DrB,IAAA,CAACM,QAAQ,EACPE,KAAK,CAAE,GAAI,CACXC,KAAK,CAAE,CAAEe,KAAK,CAAE,MAAO,CAAE,CACzBd,OAAO,CAAG0D,GAAG,EAAKC,OAAO,CAAClD,KAAK,CAAC,eAAe,CAAEiD,GAAG,CAAG;AAAA,CACvDzD,MAAM,CAAG2D,IAAmB,EAAK,CAC/B,GAAIA,IAAI,CAAE,CACRxC,WAAW,CAACwC,IAAI,CAAC,CAAE;AACnBD,OAAO,CAACE,GAAG,CAAC,eAAe,CAAED,IAAI,CAAC,CACpC,CACF,CAAE,CACH,CAAC,CACC,CAAC,cAENpE,KAAA,MAAAmB,QAAA,EAAG,gBAAc,CAACQ,QAAQ,EAAI,CAAC,IAAC,CAI/BE,QAAQ,cACP7B,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBrB,IAAA,QAAAqB,QAAA,CAAMmD,IAAI,CAACC,SAAS,CAAC1C,QAAQ,CAAE,IAAI,CAAE,CAAC,CAAC,CAAM,CAAC,EAC3C,CAAC,cAEN/B,IAAA,MAAAqB,QAAA,CAAG,sBAAoB,CAAG,CAC3B,EAEE,CAAC,EACD,CAAC,cAIRrB,IAAA,QAAKS,KAAK,CAAE,CAAEe,KAAK,CAAE,OAAO,CAAEC,MAAM,CAAE,OAAO,CAAEiD,MAAM,CAAE,WAAY,CAAE,CAAArD,QAAA,cACnErB,IAAA,CAACJ,QAAQ,EACP+E,MAAM,CAAE1B,cAAe,CACvBT,SAAS,CAAEA,SAAW;AAAA,CACtBoC,YAAY,CAAE,CAAE,CAChBC,cAAc,CAAE,IAAK,CACrBC,eAAe,CAAEjF,MAAM,CAACkF,MAAO,CAChC,CAAC,CACC,CAAC,cAEN/E,IAAA,WACEuD,OAAO,CAAEA,CAAA,GAAM,CACb,GAAIhB,YAAY,CAACyC,MAAM,GAAK7C,QAAQ,CAAC6C,MAAM,CAAE,CAC3C3C,UAAU,CAACE,YAAY,CAAC,CAC1B,CAAC,IAAM,CACL0C,KAAK,CAAC,+BAA+B,CAAC,CACxC,CACF,CAAE,CAAA5D,QAAA,CACH,aAED,CAAQ,CAAC,cAETrB,IAAA,WAAQuD,OAAO,CAAEV,YAAa,CAAAxB,QAAA,CAAC,cAAY,CAAQ,CAAC,cACpDrB,IAAA,WAAQuD,OAAO,CAAET,YAAa,CAAAzB,QAAA,CAAC,iBAAe,CAAQ,CAAC,EAIpD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAK,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}