{"ast":null,"code":"var _jsxFileName = \"/Users/bruce/Desktop/project_2025/Blackwood-Mansion/src/components/Chapters/Chapter1.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { TypeAnimation } from 'react-type-animation';\nimport Modal from 'react-modal';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { useScreenVisibility } from '../ScreenVisibilityContext';\nimport Carousel from 'react-spring-3d-carousel';\nimport { config } from 'react-spring';\nimport { useCardContext } from '../CardContext';\nimport { useDrag } from '@use-gesture/react';\nimport { animated } from '@react-spring/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\nconst QrReader = ({\n  delay,\n  style,\n  onError,\n  onScan\n}) => {\n  _s();\n  const qrScannerRef = useRef(null);\n  useEffect(() => {\n    if (qrScannerRef.current) {\n      const qrCodeScanner = new Html5QrcodeScanner(qrScannerRef.current.id, {\n        fps: 10,\n        qrbox: 250\n      }, false);\n      qrCodeScanner.render(decodedText => onScan(decodedText), error => onError(error));\n      return () => {\n        qrCodeScanner.clear().catch(err => console.error('Error clearing QR scanner:', err));\n      };\n    }\n  }, [onScan, onError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: qrScannerRef,\n      id: \"qr-reader\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(QrReader, \"3twh9zgSZtsFTJmb3G61ht7MTf4=\");\n_c = QrReader;\nconst Chapter1 = () => {\n  _s2();\n  const [showModal, setShowModal] = useState(false);\n  const [scanData, setScanData] = useState('Not Found');\n  const [jsonData, setJsonData] = useState(null);\n  const [refreshCounter, setRefreshCounter] = useState(0);\n  const [arrayOrder, setArrayOrder] = useState([]);\n  const [cardImages, setCardImages] = useState([{\n    id: 1,\n    name: 'Placeholder 1',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 2,\n    name: 'Placeholder 2',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 3,\n    name: 'Placeholder 3',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 4,\n    name: 'Placeholder 4',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 5,\n    name: 'Placeholder 5',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 6,\n    name: 'Placeholder 6',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 7,\n    name: 'Placeholder 7',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 8,\n    name: 'Placeholder 8',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 9,\n    name: 'Placeholder 9',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }]);\n  const {\n    screenVisibility,\n    handleScreen\n  } = useScreenVisibility();\n  const {\n    cardData,\n    handleTempArr,\n    checkOrder,\n    getCardNumber,\n    currentArray,\n    // getSetOrder,\n    getCardSet,\n    cardSetType,\n    getSetOrder,\n    setCardSet\n    // setCardSet,\n  } = useCardContext();\n\n  // setCardSet('set1');\n  // useEffect(() => {\n  //   setCardSet('set1'); // triggers safe update now\n  // }, [setCardSet]);\n  useEffect(() => {\n    setCardSet('set1');\n  }, []); // empty array means it only runs once\n\n  const [goToSlide, setGoToSlide] = useState(undefined);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const lastFetchedURL = useRef(null);\n  // currentArray.length = 0; // Clear the currentArray\n\n  useEffect(() => {\n    if (jsonData && jsonData.id) {\n      const matchedCard = cardData.find(card => card.id === jsonData.id);\n      if (matchedCard) {\n        setCardImages(prevCards => prevCards.map(card => {\n          var _jsonData$name, _jsonData$image, _jsonData$audio;\n          return card.id === jsonData.id ? {\n            ...card,\n            name: (_jsonData$name = jsonData.name) !== null && _jsonData$name !== void 0 ? _jsonData$name : card.name,\n            image: (_jsonData$image = jsonData.image) !== null && _jsonData$image !== void 0 ? _jsonData$image : card.image,\n            audio: (_jsonData$audio = jsonData.audio) !== null && _jsonData$audio !== void 0 ? _jsonData$audio : card.audio\n          } : card;\n        }));\n        // Force rerender manually\n        // setRefreshCounter(prev => prev + 1);\n      } else {\n        console.warn(`No matching card in cardData with id ${jsonData.id}`);\n      }\n    }\n    // }, [jsonData, cardData]);\n  }, [jsonData]);\n\n  // QR logic inside modal (reacts to scanData changes)\n\n  const openModal = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n  const goBackToMain = () => handleScreen('main');\n  const goToChapter2 = () => handleScreen('chapter_2');\n  const handleCardClick = cardIndex => {\n    // handleTempArr(cardData[cardIndex]);\n    setCurrentCardIndex(cardIndex);\n    setShowModal(true);\n  };\n  const carouselSlides = cardImages.map((card, index) => ({\n    key: index,\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleCardClick(index),\n      className: \"flex flex-col items-center justify-center bg-white shadow-lg rounded p-4 cursor-pointer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: card.image,\n        alt: card.name,\n        style: {\n          width: '200px',\n          height: '200px'\n        },\n        className: \"w-64 h-64 object-contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mt-2 text-xl font-bold\",\n        children: getCardNumber(card.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-800 text-lg\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this),\n    onClick: () => setGoToSlide(index)\n  }));\n  const AnimatedDiv = animated('div');\n  const indexRef = useRef(0); // Keeps track of the current index\n\n  const bind = useDrag(({\n    down,\n    movement: [mx],\n    direction: [xDir],\n    velocity\n  }) => {\n    if (!down && Math.hypot(...velocity) > 0.2) {\n      const newIndex = xDir < 0 ? Math.min(cardImages.length - 1, indexRef.current + 1) // Swipe Left\n      : Math.max(0, indexRef.current - 1); // Swipe Right\n\n      indexRef.current = newIndex;\n      setGoToSlide(newIndex);\n    }\n  }, {\n    filterTaps: true,\n    axis: 'x',\n    pointer: {\n      touch: true,\n      buttons: [1]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Chapter 1!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"intro-phrase-style\",\n      style: {\n        minHeight: '100px',\n        width: 'auto',\n        margin: '0 auto',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(TypeAnimation, {\n        sequence: [\"It was a dark, stormy evening when the call came in. A nervous voice on the other end, trembling with something deeper than fear. The caretaker of Blackwood Mansion desperate for help.\", 1000],\n        speed: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      onRequestClose: closeModal,\n      contentLabel: \"QR Code Modal\",\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      closeTimeoutMS: 200,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-title\",\n          children: \"\\uD83E\\uDE9F QR Code Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"close-btn\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(QrReader, {\n          delay: 300,\n          style: {\n            width: '100%'\n          },\n          onError: err => console.error('QR scan error', err),\n          onScan: async data => {\n            if (data) {\n              setScanData(data);\n              console.log('Scanned data:', data);\n              try {\n                const response = await fetch(data);\n                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n                const json = await response.json();\n\n                //I Need this \n                setJsonData(json);\n\n                // Update the JSON data display section\n                // if (json.id) \n                if (!arrayOrder.includes(json.id)) {\n                  // const matchedCard = cardData.find(card => card.id === json.id);\n                  const matchedCard = cardData[json.id - 1];\n                  // const matchedCard = cardData[currentCardIndex];\n\n                  // if (matchedCard) \n                  // {\n                  const audio = new Audio(matchedCard.audio);\n                  // const audio = new Audio(json.audio);\n                  audio.play();\n                  // Open a new modal to display card details\n                  setShowModal(false); // Close the QR modal\n\n                  const newModal = window.open('', '_blank', 'width=600,height=400');\n                  if (newModal) {\n                    newModal.document.write(`\n                            <html>\n                            <head>\n                            <title>Card Details</title>\n                            <style>\n                              body {\n                              font-family: Arial, sans-serif;\n                              text-align: center;\n                              padding: 20px;\n                              }\n                              img {\n                              max-width: 100%;\n                              height: auto;\n                              }\n                              button {\n                              margin-top: 20px;\n                              padding: 10px 20px;\n                              background-color: #4CAF50;\n                              color: white;\n                              border: none;\n                              border-radius: 5px;\n                              cursor: pointer;\n                              }\n                              button:hover {\n                              background-color: #45a049;\n                              }\n                            </style>\n                            </head>\n                            <body>\n                            <h1>${matchedCard.name}</h1>\n                            <img src=\"${matchedCard.image}\" alt=\"${matchedCard.name}\" />\n                            <p>${currentCardIndex}</p>\n                            <button id=\"playAudio\">Play Audio</button>\n                            <button id=\"addToSequence\">Add to Sequence</button>\n                            <button id=\"closeModal\">Close Modal</button>\n\n\n                            <script>\n                              document.getElementById('playAudio').addEventListener('click', () => {\n                              const audio = new Audio('${matchedCard.audio}');\n                              audio.play();\n                              });\n                            </script>\n                            </body>\n                            </html>\n                            `);\n                    const closeModalButton = newModal.document.getElementById('closeModal');\n                    if (closeModalButton) {\n                      closeModalButton.addEventListener('click', () => {\n                        newModal.close();\n                      });\n                    }\n                    const addToSequenceButton = newModal.document.getElementById('addToSequence');\n                    if (addToSequenceButton) {\n                      addToSequenceButton.addEventListener('click', () => {\n                        // temparry.push(matchedCard.id);\n                        if (!arrayOrder.includes(matchedCard.id)) {\n                          // currentArray.push(matchedCard.id);\n                          // setArrayOrder(prev => [...prev, matchedCard.id]);\n                          setArrayOrder(prev => [...prev, json.id]);\n                          setJsonData(matchedCard);\n                          // alert('Card added to the sequence!');\n                          // getCardSet(cardSetType);\n                        } else {\n                          alert('Card is already in the sequence!');\n                        }\n                        // setJsonData(matchedCard);\n                        // alert('Card added to the sequence!');\n                        newModal.close();\n                        // currentArray.push(matchedCard.id);\n                      });\n                    }\n                  }\n\n                  // setJsonData(matchedCard);\n                  // console.log('Matched Card:', matchedCard);\n                  // } else {\n                  //   console.warn(`No matching card in cardData with id ${json.id}`);\n                  // }\n                  // closeModal();\n                } else {\n                  alert('Card is already in the sequence!');\n                }\n                // setJsonData(json);\n                closeModal();\n              } catch (error) {\n                console.error('Fetch error:', error);\n                setJsonData({\n                  error: 'Failed to fetch data.'\n                });\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Scanned Data: \", scanData]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-order-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Card Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-order-grid\",\n        children: cardImages.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card-order-item ${arrayOrder.includes(card.id) ? 'scanned' : 'not-scanned'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.image,\n            alt: card.name,\n            style: {\n              width: '40px',\n              height: '60px'\n            },\n            className: \"object-contain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: arrayOrder.includes(card.id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"scanned\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 13\n              }, this), ' ', arrayOrder.indexOf(card.id) + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 11\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"not-scanned\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 11\n          }, this)]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .card-order-item {\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        padding: 5px;\n        text-align: center;\n        background-color: #f9f9f9;\n          }\n          .card-order-item.scanned {\n        background-color: #d4edda; /* Light green for scanned */\n        border-color: #c3e6cb;\n          }\n          .card-order-item.not-scanned {\n        background-color: #f8d7da; /* Light red for not scanned */\n        border-color: #f5c6cb;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(AnimatedDiv, {\n        ...bind(),\n        style: {\n          touchAction: 'pan-y',\n          cursor: 'grab',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        \"data-testid\": \"carousel-container\",\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          // force remount when updated\n          slides: carouselSlides,\n          goToSlide: goToSlide,\n          offsetRadius: 2,\n          showNavigation: false // Disable default navigation buttons\n          ,\n          animationConfig: config.gentle\n        }, refreshCounter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGoToSlide(prev => prev !== undefined ? Math.max(0, prev - 1) : 0),\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '10px',\n          transform: 'translateY(-50%)',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '50%',\n          width: '40px',\n          height: '40px',\n          cursor: 'pointer'\n        },\n        children: \"\\u25C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        onClick: () => setGoToSlide(prev => prev !== undefined ? Math.min(carouselSlides.length - 1, prev + 1) : 0),\n        style: {\n          position: 'absolute',\n          top: '50%',\n          right: '10px',\n          transform: 'translateY(-50%)',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '50%',\n          width: '40px',\n          height: '40px',\n          cursor: 'pointer'\n        },\n        children: \"\\u25B6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        gap: '10px',\n        justifyContent: 'center',\n        transform: 'translateY(-125px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          currentArray.length = 0; // Clear the currentArray\n          arrayOrder.length = 0; // Clear the arrayOrder\n\n          setCardImages([{\n            id: 1,\n            name: 'Placeholder 1',\n            image: '/projects/blackwood-mansion/assets/images/ch1.png',\n            audio: 'Scan QR to update'\n          }, {\n            id: 2,\n            name: 'Placeholder 2',\n            image: '/projects/blackwood-mansion/assets/images/ch1.png',\n            audio: 'Scan QR to update'\n          }, {\n            id: 3,\n            name: 'Placeholder 3',\n            image: '/projects/blackwood-mansion/assets/images/ch1.png',\n            audio: 'Scan QR to update'\n          }, {\n            id: 4,\n            name: 'Placeholder 4',\n            image: '/projects/blackwood-mansion/assets/images/ch1.png',\n            audio: 'Scan QR to update'\n          }, {\n            id: 5,\n            name: 'Placeholder 5',\n            image: '/projects/blackwood-mansion/assets/images/ch1.png',\n            audio: 'Scan QR to update'\n          }, {\n            id: 6,\n            name: 'Placeholder 6',\n            image: '/projects/blackwood-mansion/assets/images/ch1.png',\n            audio: 'Scan QR to update'\n          }, {\n            id: 7,\n            name: 'Placeholder 7',\n            image: '/projects/blackwood-mansion/assets/images/ch1.png',\n            audio: 'Scan QR to update'\n          }, {\n            id: 8,\n            name: 'Placeholder 8',\n            image: '/projects/blackwood-mansion/assets/images/ch1.png',\n            audio: 'Scan QR to update'\n          }, {\n            id: 9,\n            name: 'Placeholder 9',\n            image: '/projects/blackwood-mansion/assets/images/ch1.png',\n            audio: 'Scan QR to update'\n          }]);\n          alert('Order has been cleared!');\n        },\n        className: \"spooky-btn\",\n        children: \"Clear Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (arrayOrder.length === cardData.length) {\n            checkOrder(arrayOrder, cardSetType);\n          } else {\n            alert(`Please click all cards first. : ${JSON.stringify(arrayOrder, null, 2)} \\n` + `Please click all cards first. : ${JSON.stringify(getSetOrder(cardSetType), null, 2)} \\n` + `Please click all cards first. : ${cardSetType} \\n`);\n          }\n\n          // alert(`Please click all cards first. : ${JSON.stringify(jsonData, null, 2)}`);\n        },\n        className: \"spooky-btn\",\n        children: \"Check Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"spooky-btn\",\n        onClick: goBackToMain,\n        children: \"Back to Main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"spooky-btn\",\n        onClick: goToChapter2,\n        children: \"Go to Chapter 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chapter1, \"5rumAXDc+T2LjMPUsfN/3t75juc=\", false, function () {\n  return [useScreenVisibility, useCardContext, useDrag];\n});\n_c2 = Chapter1;\nexport default Chapter1;\nvar _c, _c2;\n$RefreshReg$(_c, \"QrReader\");\n$RefreshReg$(_c2, \"Chapter1\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","TypeAnimation","Modal","Html5QrcodeScanner","useScreenVisibility","Carousel","config","useCardContext","useDrag","animated","jsxDEV","_jsxDEV","setAppElement","CardContainer","div","QrReader","delay","style","onError","onScan","_s","qrScannerRef","current","qrCodeScanner","id","fps","qrbox","render","decodedText","error","clear","catch","err","console","children","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chapter1","_s2","showModal","setShowModal","scanData","setScanData","jsonData","setJsonData","refreshCounter","setRefreshCounter","arrayOrder","setArrayOrder","cardImages","setCardImages","name","image","audio","screenVisibility","handleScreen","cardData","handleTempArr","checkOrder","getCardNumber","currentArray","getCardSet","cardSetType","getSetOrder","setCardSet","goToSlide","setGoToSlide","undefined","currentCardIndex","setCurrentCardIndex","lastFetchedURL","matchedCard","find","card","prevCards","map","_jsonData$name","_jsonData$image","_jsonData$audio","warn","openModal","closeModal","goBackToMain","goToChapter2","handleCardClick","cardIndex","carouselSlides","index","key","content","onClick","className","src","alt","AnimatedDiv","indexRef","bind","down","movement","mx","direction","xDir","velocity","Math","hypot","newIndex","min","length","max","filterTaps","axis","pointer","touch","buttons","minHeight","margin","overflow","sequence","speed","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","data","log","response","fetch","ok","Error","status","json","includes","Audio","play","newModal","window","open","document","write","closeModalButton","getElementById","addEventListener","close","addToSequenceButton","prev","alert","role","indexOf","touchAction","cursor","display","flexDirection","alignItems","justifyContent","slides","offsetRadius","showNavigation","animationConfig","gentle","position","top","left","transform","backgroundColor","color","border","borderRadius","right","gridTemplateColumns","gap","JSON","stringify","_c2","$RefreshReg$"],"sources":["/Users/bruce/Desktop/project_2025/Blackwood-Mansion/src/components/Chapters/Chapter1.tsx"],"sourcesContent":["import React, { CSSProperties, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { TypeAnimation } from 'react-type-animation';\nimport Modal from 'react-modal';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { useScreenVisibility } from '../ScreenVisibilityContext';\nimport Carousel from 'react-spring-3d-carousel';\nimport { config } from 'react-spring';\nimport { useCardContext } from '../CardContext';\n\nimport { useDrag } from '@use-gesture/react';\nimport { animated } from '@react-spring/web';\nimport { get } from 'http';\n\n\nModal.setAppElement('#root');\n\nconst CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\ninterface QrReaderProps {\n  delay: number;\n  style: CSSProperties;\n  onError: (err: any) => void;\n  onScan: (data: string | null) => void;\n}\n\nconst QrReader: React.FC<QrReaderProps> = ({ delay, style, onError, onScan }) => {\n  const qrScannerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (qrScannerRef.current) {\n      const qrCodeScanner = new Html5QrcodeScanner(\n        qrScannerRef.current.id,\n        {\n          fps: 10,\n          qrbox: 250,\n        },\n        false\n      );\n    \n      qrCodeScanner.render(\n        (decodedText: string) => onScan(decodedText),\n        (error: string) => onError(error)\n      );\n    \n      return () => {\n        qrCodeScanner.clear().catch((err) => console.error('Error clearing QR scanner:', err));\n      };\n    }\n  }, [onScan, onError]);\n\n  return (\n    <div style={style}>\n      <div ref={qrScannerRef} id=\"qr-reader\" style={{ width: '100%', height: '100%' }}></div>\n    </div>\n  );\n};\n\nconst Chapter1: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [scanData, setScanData] = useState<string>('Not Found');\n  const [jsonData, setJsonData] = useState<any>(null);\n  const [refreshCounter, setRefreshCounter] = useState(0);\n  const [arrayOrder, setArrayOrder] = useState<number[]>([]); \n\n\n  const [cardImages, setCardImages] = useState([\n    { id: 1, name: 'Placeholder 1', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 2, name: 'Placeholder 2', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 3, name: 'Placeholder 3', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 4, name: 'Placeholder 4', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 5, name: 'Placeholder 5', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 6, name: 'Placeholder 6', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 7, name: 'Placeholder 7', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 8, name: 'Placeholder 8', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 9, name: 'Placeholder 9', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n  ]);\n\n  const { screenVisibility, handleScreen } = useScreenVisibility();\n  const {\n    cardData,\n    handleTempArr,\n    checkOrder,\n    getCardNumber,\n    currentArray,\n    // getSetOrder,\n    getCardSet,\n    cardSetType,\n    getSetOrder,\n    \n    setCardSet,\n    // setCardSet,\n    \n  } = useCardContext();\n\n  // setCardSet('set1');\n  // useEffect(() => {\n  //   setCardSet('set1'); // triggers safe update now\n  // }, [setCardSet]);\n  useEffect(() => {\n    setCardSet('set1');\n  }, []); // empty array means it only runs once\n\n  const [goToSlide, setGoToSlide] = useState<number | undefined>(undefined);\n  const [currentCardIndex, setCurrentCardIndex] = useState<number>(0);\n  const lastFetchedURL = useRef<string | null>(null);\n  // currentArray.length = 0; // Clear the currentArray\n\n  useEffect(() => {\n    if (jsonData && jsonData.id) {\n      const matchedCard = cardData.find(card => card.id === jsonData.id);\n      if (matchedCard) {\n        setCardImages(prevCards =>\n          prevCards.map(card =>\n            card.id === jsonData.id\n              ? {\n                  ...card,\n                  name: jsonData.name ?? card.name,\n                  image: jsonData.image ?? card.image,\n                  audio: jsonData.audio ?? card.audio,\n                }\n              : card\n          )\n        );\n        // Force rerender manually\n        // setRefreshCounter(prev => prev + 1);\n      } else {\n        console.warn(`No matching card in cardData with id ${jsonData.id}`);\n      }\n    }\n  // }, [jsonData, cardData]);\n  }, [jsonData]);\n\n\n  // QR logic inside modal (reacts to scanData changes)\n\n\n  const openModal = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n\n  const goBackToMain = () => handleScreen('main');\n  const goToChapter2 = () => handleScreen('chapter_2');\n\n  const handleCardClick = (cardIndex: number) => {\n    // handleTempArr(cardData[cardIndex]);\n    setCurrentCardIndex(cardIndex);\n    setShowModal(true);\n  };\n\n  const carouselSlides = cardImages.map((card, index) => ({\n    key: index,\n    content: (\n      <div\n        onClick={() => handleCardClick(index)}\n        className=\"flex flex-col items-center justify-center bg-white shadow-lg rounded p-4 cursor-pointer\"\n      >\n        <img\n          src={card.image}\n          alt={card.name}\n          style={{ width: '200px', height: '200px' }}\n          className=\"w-64 h-64 object-contain\"\n        />\n        <span className=\"mt-2 text-xl font-bold\">{getCardNumber(card.id)}</span>\n        <p className=\"text-gray-800 text-lg\">{card.name}</p>\n      </div>\n    ),\n    onClick: () => setGoToSlide(index),\n  }));\n\n  const AnimatedDiv = animated('div');\n  const indexRef = useRef(0); // Keeps track of the current index\n\n  const bind = useDrag(\n    ({ down, movement: [mx], direction: [xDir], velocity }) => {\n      if (!down && Math.hypot(...velocity) > 0.2) {\n        const newIndex =\n          xDir < 0\n            ? Math.min(cardImages.length - 1, indexRef.current + 1) // Swipe Left\n            : Math.max(0, indexRef.current - 1); // Swipe Right\n\n        indexRef.current = newIndex;\n        setGoToSlide(newIndex);\n      }\n    },\n    {\n      filterTaps: true,\n      axis: 'x',\n      pointer: { touch: true , buttons: [1]},\n    }\n  );\n\n  return (\n    <div>\n      <h1>Welcome to Chapter 1!</h1>\n\n      <div className=\"intro-phrase-style\" style={{ minHeight: '100px', width: 'auto', margin: '0 auto', overflow: 'hidden' }}>\n        <TypeAnimation\n          sequence={[\n        \"It was a dark, stormy evening when the call came in. A nervous voice on the other end, trembling with something deeper than fear. The caretaker of Blackwood Mansion desperate for help.\",\n        1000,\n          ]}\n          speed={50}\n        />\n      </div>\n\n      <Modal\n        isOpen={showModal}\n        onRequestClose={closeModal}\n        contentLabel=\"QR Code Modal\"\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        closeTimeoutMS={200}\n      >\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\">🪟 QR Code Scanner</h2>\n          <button onClick={closeModal} className=\"close-btn\">\n            ✕\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <QrReader\n            delay={300}\n            style={{ width: '100%' }}\n            onError={(err) => console.error('QR scan error', err)}\n            onScan={async (data: string | null) => {\n              if (data) {\n                setScanData(data);\n                console.log('Scanned data:', data);\n                try {\n                  const response = await fetch(data);\n                  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n                  const json = await response.json();\n\n                  //I Need this \n                    setJsonData(json);\n\n                    // Update the JSON data display section\n                    // if (json.id) \n                    if (!arrayOrder.includes(json.id)) \n                    {\n                      // const matchedCard = cardData.find(card => card.id === json.id);\n                      const matchedCard = cardData[json.id - 1];\n                      // const matchedCard = cardData[currentCardIndex];\n                      \n\n                      // if (matchedCard) \n                      // {\n                        const audio = new Audio(matchedCard.audio);\n                        // const audio = new Audio(json.audio);\n                        audio.play();\n                        // Open a new modal to display card details\n                        setShowModal(false); // Close the QR modal\n\n                        const newModal = window.open('', '_blank', 'width=600,height=400');\n                        if (newModal) {\n                            newModal.document.write(`\n                            <html>\n                            <head>\n                            <title>Card Details</title>\n                            <style>\n                              body {\n                              font-family: Arial, sans-serif;\n                              text-align: center;\n                              padding: 20px;\n                              }\n                              img {\n                              max-width: 100%;\n                              height: auto;\n                              }\n                              button {\n                              margin-top: 20px;\n                              padding: 10px 20px;\n                              background-color: #4CAF50;\n                              color: white;\n                              border: none;\n                              border-radius: 5px;\n                              cursor: pointer;\n                              }\n                              button:hover {\n                              background-color: #45a049;\n                              }\n                            </style>\n                            </head>\n                            <body>\n                            <h1>${matchedCard.name}</h1>\n                            <img src=\"${matchedCard.image}\" alt=\"${matchedCard.name}\" />\n                            <p>${currentCardIndex}</p>\n                            <button id=\"playAudio\">Play Audio</button>\n                            <button id=\"addToSequence\">Add to Sequence</button>\n                            <button id=\"closeModal\">Close Modal</button>\n\n\n                            <script>\n                              document.getElementById('playAudio').addEventListener('click', () => {\n                              const audio = new Audio('${matchedCard.audio}');\n                              audio.play();\n                              });\n                            </script>\n                            </body>\n                            </html>\n                            `);\n\n                            const closeModalButton = newModal.document.getElementById('closeModal');\n                            if (closeModalButton) {\n                              closeModalButton.addEventListener('click', () => {\n                                newModal.close();\n                              });\n                            }\n\n                            const addToSequenceButton = newModal.document.getElementById('addToSequence');\n                            if (addToSequenceButton) {\n                              addToSequenceButton.addEventListener('click', () => {\n                                // temparry.push(matchedCard.id);\n                                if (!arrayOrder.includes(matchedCard.id)) \n                                {\n                                  // currentArray.push(matchedCard.id);\n                                  // setArrayOrder(prev => [...prev, matchedCard.id]);\n                                  setArrayOrder(prev => [...prev, json.id]);\n                                  setJsonData(matchedCard);\n                                  // alert('Card added to the sequence!');\n                                  // getCardSet(cardSetType);\n                                } \n                                else {\n                                 alert('Card is already in the sequence!');\n                                }\n                                // setJsonData(matchedCard);\n                                // alert('Card added to the sequence!');\n                                newModal.close();\n                                // currentArray.push(matchedCard.id);\n                              });\n                            }\n                        }\n\n                        // setJsonData(matchedCard);\n                        // console.log('Matched Card:', matchedCard);\n                      // } else {\n                      //   console.warn(`No matching card in cardData with id ${json.id}`);\n                      // }\n                      // closeModal();\n                    }\n                    else{\n                      alert('Card is already in the sequence!');\n                    }\n                  // setJsonData(json);\n                  closeModal();\n                } catch (error) {\n                  console.error('Fetch error:', error);\n                  setJsonData({ error: 'Failed to fetch data.' });\n                }\n              }\n            }}\n          />\n          <p>Scanned Data: {scanData}</p>\n        </div>\n      </Modal>\n\n\n\n      <div className=\"card-order-container\">\n        <h2>Card Order</h2>\n        <div className=\"card-order-grid\">\n          {cardImages.map((card, index) => (\n        <div\n          key={card.id}\n          className={`card-order-item ${\n            arrayOrder.includes(card.id) ? 'scanned' : 'not-scanned'\n          }`}\n        >\n          <img\n            src={card.image}\n            alt={card.name}\n            style={{ width: '40px', height: '60px' }}\n            className=\"object-contain\"\n          />\n          <p>\n            {arrayOrder.includes(card.id) ? (\n          <span>\n            <span role=\"img\" aria-label=\"scanned\">\n            </span>{' '}\n            {arrayOrder.indexOf(card.id) + 1}\n          </span>\n            ) : (\n          <span role=\"img\" aria-label=\"not-scanned\">\n          </span>\n            )}\n          </p>\n        </div>\n          ))}\n        </div>\n      </div>\n\n      <style>\n        {`\n          .card-order-item {\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        padding: 5px;\n        text-align: center;\n        background-color: #f9f9f9;\n          }\n          .card-order-item.scanned {\n        background-color: #d4edda; /* Light green for scanned */\n        border-color: #c3e6cb;\n          }\n          .card-order-item.not-scanned {\n        background-color: #f8d7da; /* Light red for not scanned */\n        border-color: #f5c6cb;\n          }\n        `}\n      </style>\n\n      {/* <div style={{ width: '300px', height: '270px', margin: '10px auto', overflow: 'hidden', transform: 'translateY(-120px)', position: 'relative' }}> */}\n      <div className='carousel-wrapper'>\n\n        <AnimatedDiv {...bind()} style={{ touchAction: 'pan-y', cursor: 'grab', height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }} data-testid=\"carousel-container\">\n          <Carousel\n        key={refreshCounter} // force remount when updated\n        slides={carouselSlides}\n        goToSlide={goToSlide}\n        offsetRadius={2}\n        showNavigation={false} // Disable default navigation buttons\n        animationConfig={config.gentle}\n          />\n        </AnimatedDiv>\n        <button\n          onClick={() => setGoToSlide((prev) => (prev !== undefined ? Math.max(0, prev - 1) : 0))}\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '10px',\n            transform: 'translateY(-50%)',\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            border: 'none',\n            borderRadius: '50%',\n            width: '40px',\n            height: '40px',\n            cursor: 'pointer',\n          }}\n        >\n          ◀\n        </button>\n        <button\n          className=''\n          onClick={() => setGoToSlide((prev) => (prev !== undefined ? Math.min(carouselSlides.length - 1, prev + 1) : 0))}\n          style={{\n        position: 'absolute',\n        top: '50%',\n        right: '10px',\n        transform: 'translateY(-50%)',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '50%',\n        width: '40px',\n        height: '40px',\n        cursor: 'pointer',\n          }}\n        >\n          ▶\n        </button>\n      </div>\n      {/* </div> */}\n\n      <div className='button-group' style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '10px', justifyContent: 'center', transform: 'translateY(-125px)' }}>\n        <button\n          onClick={() => {\n            currentArray.length = 0; // Clear the currentArray\n            arrayOrder.length = 0; // Clear the arrayOrder\n            \n            setCardImages([\n              { id: 1, name: 'Placeholder 1', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n              { id: 2, name: 'Placeholder 2', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n              { id: 3, name: 'Placeholder 3', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n              { id: 4, name: 'Placeholder 4', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n              { id: 5, name: 'Placeholder 5', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n              { id: 6, name: 'Placeholder 6', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n              { id: 7, name: 'Placeholder 7', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n              { id: 8, name: 'Placeholder 8', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n              { id: 9, name: 'Placeholder 9', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n            ]);\n\n            alert('Order has been cleared!');\n          }}\n          className='spooky-btn'\n        >\n          Clear Order\n        </button>\n\n        <button\n          onClick={() => {\n            if (arrayOrder.length === cardData.length) {\n              checkOrder(arrayOrder, cardSetType);\n            } else {\n              alert(`Please click all cards first. : ${JSON.stringify(arrayOrder, null, 2)} \\n` + \n              `Please click all cards first. : ${JSON.stringify(getSetOrder(cardSetType), null, 2)} \\n` + \n              \n              `Please click all cards first. : ${cardSetType} \\n`);\n            }\n            \n            // alert(`Please click all cards first. : ${JSON.stringify(jsonData, null, 2)}`);\n          }}\n          className='spooky-btn'\n        >\n          Check Order\n        </button>\n\n        <button className='spooky-btn' onClick={goBackToMain}>Back to Main</button>\n        <button  className='spooky-btn' onClick={goToChapter2}>Go to Chapter 2</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chapter1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}