{"ast":null,"code":"var _jsxFileName = \"/home/fnky/C0de/GIT/Blackwood_Mansion/Blackwood-Mansion/src/components/CardContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContext = /*#__PURE__*/createContext(undefined);\nexport const useCardContext = () => {\n  _s();\n  const context = useContext(CardContext);\n  if (!context) {\n    throw new Error('useCardContext must be used within a CardProvider');\n  }\n  return context;\n};\n_s(useCardContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst cardSet1 = [{\n  id: 1,\n  image: '/fall_object.webp',\n  name: 'Fallen Object',\n  audio: '../../asset/audio/bones-scream.mp3',\n  qrcode: ''\n}, {\n  id: 2,\n  image: '/whisper_image.webp',\n  name: 'Suspicious Whispers',\n  audio: '../../asset/audio/fart.mp3',\n  qrcode: ''\n}, {\n  id: 3,\n  image: '/bloody_knife.png',\n  name: 'Bloody Knife',\n  audio: '../../asset/audio/fart.mp3',\n  qrcode: ''\n}, {\n  id: 4,\n  image: '/torn_curtain.png',\n  name: 'Torn Curtain',\n  audio: '../../asset/audio/fart.mp3',\n  qrcode: ''\n}, {\n  id: 5,\n  image: '/locked_diary.png',\n  name: 'Locked Diary',\n  audio: '../../asset/audio/fart.mp3',\n  qrcode: ''\n}];\nconst cardSet2 = [{\n  id: 6,\n  image: '/ghost.png',\n  name: 'Ghost',\n  audio: '../../asset/audio/ghost.mp3',\n  qrcode: ''\n}, {\n  id: 7,\n  image: '/mirror.png',\n  name: 'Broken Mirror',\n  audio: '../../asset/audio/glass.mp3',\n  qrcode: ''\n}, {\n  id: 8,\n  image: '/shadow.png',\n  name: 'Creepy Shadow',\n  audio: '../../asset/audio/shadow.mp3',\n  qrcode: ''\n}, {\n  id: 9,\n  image: '/clown.png',\n  name: 'Scary Clown',\n  audio: '../../asset/audio/clown.mp3',\n  qrcode: ''\n}, {\n  id: 10,\n  image: '/doll.png',\n  name: 'Haunted Doll',\n  audio: '../../asset/audio/doll.mp3',\n  qrcode: ''\n}];\nconst cardSet3 = [{\n  id: 11,\n  image: '/grave.png',\n  name: 'Graveyard',\n  audio: '../../asset/audio/grave.mp3',\n  qrcode: ''\n}, {\n  id: 12,\n  image: '/bat.png',\n  name: 'Flying Bat',\n  audio: '../../asset/audio/bat.mp3',\n  qrcode: ''\n}, {\n  id: 13,\n  image: '/zombie.png',\n  name: 'Zombie',\n  audio: '../../asset/audio/zombie.mp3',\n  qrcode: ''\n}, {\n  id: 14,\n  image: '/fog.png',\n  name: 'Thick Fog',\n  audio: '../../asset/audio/fog.mp3',\n  qrcode: ''\n}, {\n  id: 15,\n  image: '/clock.png',\n  name: 'Broken Clock',\n  audio: '../../asset/audio/clock.mp3',\n  qrcode: ''\n}];\nconst getCardSet = type => {\n  switch (type) {\n    case 'set1':\n      return cardSet1;\n    case 'set2':\n      return cardSet2;\n    case 'set3':\n      return cardSet3;\n    default:\n      return cardSet1;\n  }\n};\nexport const CardProvider = ({\n  children\n}) => {\n  _s2();\n  const [cardSetType, setCardSetType] = useState('set1');\n  const [clickOrder, setClickOrder] = useState([]);\n  const cardData = getCardSet(cardSetType);\n  const setCardSet = type => {\n    setCardSetType(type);\n    setClickOrder([]);\n  };\n  const handleTempArr = card => {\n    if (clickOrder.length < cardData.length) {\n      if (!clickOrder.includes(card.id)) {\n        setClickOrder([...clickOrder, card.id]);\n      } else {\n        console.log(`Card ${card.id} already clicked.`);\n      }\n    }\n  };\n  const checkOrder = array => {\n    const orders = {\n      set1: [2, 5, 3, 1, 4],\n      set2: [6, 10, 7, 8, 9],\n      set3: [12, 15, 11, 13, 14]\n    };\n    const correctOrder = orders[cardSetType];\n    const isCorrect = correctOrder.every((val, index) => val === array[index]);\n    if (isCorrect) {\n      alert('Order is correct');\n    } else {\n      alert('Order is NOT correct');\n      setClickOrder([]);\n    }\n  };\n  const getCardNumber = cardId => {\n    const index = clickOrder.indexOf(cardId);\n    return index >= 0 ? index + 1 : null;\n  };\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: {\n      cardData,\n      setCardSet,\n      currentArray: clickOrder,\n      handleTempArr,\n      checkOrder,\n      getCardNumber\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s2(CardProvider, \"TX9WyLJ0FW8delB+kIY61boUntY=\");\n_c = CardProvider;\nvar _c;\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CardContext","undefined","useCardContext","_s","context","Error","cardSet1","id","image","name","audio","qrcode","cardSet2","cardSet3","getCardSet","type","CardProvider","children","_s2","cardSetType","setCardSetType","clickOrder","setClickOrder","cardData","setCardSet","handleTempArr","card","length","includes","console","log","checkOrder","array","orders","set1","set2","set3","correctOrder","isCorrect","every","val","index","alert","getCardNumber","cardId","indexOf","Provider","value","currentArray","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/fnky/C0de/GIT/Blackwood_Mansion/Blackwood-Mansion/src/components/CardContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nexport interface Card {\n  id: number;\n  image: string;\n  name: string;\n  audio: string;\n  qrcode: string;\n}\n\ntype CardSetType = 'set1' | 'set2' | 'set3';\n\ninterface CardContextProps {\n  cardData: Card[];\n  setCardSet: (type: CardSetType) => void;\n  currentArray: number[];\n  handleTempArr: (card: Card) => void;\n  checkOrder: (array: number[]) => void;\n  getCardNumber: (cardId: number) => number | null;\n}\n\nconst CardContext = createContext<CardContextProps | undefined>(undefined);\n\nexport const useCardContext = (): CardContextProps => {\n  const context = useContext(CardContext);\n  if (!context) {\n    throw new Error('useCardContext must be used within a CardProvider');\n  }\n  return context;\n};\n\nconst cardSet1: Card[] = [\n  { id: 1, image: '/fall_object.webp', name: 'Fallen Object', audio: '../../asset/audio/bones-scream.mp3', qrcode: '' },\n  { id: 2, image: '/whisper_image.webp', name: 'Suspicious Whispers', audio: '../../asset/audio/fart.mp3', qrcode: '' },\n  { id: 3, image: '/bloody_knife.png', name: 'Bloody Knife', audio: '../../asset/audio/fart.mp3', qrcode: '' },\n  { id: 4, image: '/torn_curtain.png', name: 'Torn Curtain', audio: '../../asset/audio/fart.mp3', qrcode: '' },\n  { id: 5, image: '/locked_diary.png', name: 'Locked Diary', audio: '../../asset/audio/fart.mp3', qrcode: '' },\n];\n\nconst cardSet2: Card[] = [\n  { id: 6, image: '/ghost.png', name: 'Ghost', audio: '../../asset/audio/ghost.mp3', qrcode: '' },\n  { id: 7, image: '/mirror.png', name: 'Broken Mirror', audio: '../../asset/audio/glass.mp3', qrcode: '' },\n  { id: 8, image: '/shadow.png', name: 'Creepy Shadow', audio: '../../asset/audio/shadow.mp3', qrcode: '' },\n  { id: 9, image: '/clown.png', name: 'Scary Clown', audio: '../../asset/audio/clown.mp3', qrcode: '' },\n  { id: 10, image: '/doll.png', name: 'Haunted Doll', audio: '../../asset/audio/doll.mp3', qrcode: '' },\n];\n\nconst cardSet3: Card[] = [\n  { id: 11, image: '/grave.png', name: 'Graveyard', audio: '../../asset/audio/grave.mp3', qrcode: '' },\n  { id: 12, image: '/bat.png', name: 'Flying Bat', audio: '../../asset/audio/bat.mp3', qrcode: '' },\n  { id: 13, image: '/zombie.png', name: 'Zombie', audio: '../../asset/audio/zombie.mp3', qrcode: '' },\n  { id: 14, image: '/fog.png', name: 'Thick Fog', audio: '../../asset/audio/fog.mp3', qrcode: '' },\n  { id: 15, image: '/clock.png', name: 'Broken Clock', audio: '../../asset/audio/clock.mp3', qrcode: '' },\n];\n\nconst getCardSet = (type: CardSetType): Card[] => {\n  switch (type) {\n    case 'set1':\n      return cardSet1;\n    case 'set2':\n      return cardSet2;\n    case 'set3':\n      return cardSet3;\n    default:\n      return cardSet1;\n  }\n};\n\nexport const CardProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [cardSetType, setCardSetType] = useState<CardSetType>('set1');\n  const [clickOrder, setClickOrder] = useState<number[]>([]);\n\n  const cardData = getCardSet(cardSetType);\n\n  const setCardSet = (type: CardSetType) => {\n    setCardSetType(type);\n    setClickOrder([]);\n  };\n\n  const handleTempArr = (card: Card) => {\n    if (clickOrder.length < cardData.length) {\n      if (!clickOrder.includes(card.id)) {\n        setClickOrder([...clickOrder, card.id]);\n      } else {\n        console.log(`Card ${card.id} already clicked.`);\n      }\n    }\n  };\n\n  const checkOrder = (array: number[]) => {\n    const orders: Record<CardSetType, number[]> = {\n      set1: [2, 5, 3, 1, 4],\n      set2: [6, 10, 7, 8, 9],\n      set3: [12, 15, 11, 13, 14],\n    };\n    const correctOrder = orders[cardSetType];\n    const isCorrect = correctOrder.every((val, index) => val === array[index]);\n\n    if (isCorrect) {\n      alert('Order is correct');\n    } else {\n      alert('Order is NOT correct');\n      setClickOrder([]);\n    }\n  };\n\n  const getCardNumber = (cardId: number): number | null => {\n    const index = clickOrder.indexOf(cardId);\n    return index >= 0 ? index + 1 : null;\n  };\n\n  return (\n    <CardContext.Provider\n      value={{\n        cardData,\n        setCardSet,\n        currentArray: clickOrder,\n        handleTempArr,\n        checkOrder,\n        getCardNumber,\n      }}\n    >\n      {children}\n    </CardContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}