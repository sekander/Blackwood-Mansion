{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import styled from'styled-components';import{TypeAnimation}from'react-type-animation';import Modal from'react-modal';import{Html5QrcodeScanner}from'html5-qrcode';import{useScreenVisibility}from'../ScreenVisibilityContext';import Carousel from'react-spring-3d-carousel';import{config}from'react-spring';import{useCardContext}from'../CardContext';import{useDrag}from'@use-gesture/react';import{animated}from'@react-spring/web';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";Modal.setAppElement('#root');const CardContainer=styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;const QrReader=_ref=>{let{delay,style,onError,onScan}=_ref;const qrScannerRef=useRef(null);useEffect(()=>{if(qrScannerRef.current){const qrCodeScanner=new Html5QrcodeScanner(qrScannerRef.current.id,{fps:10,qrbox:250},false);qrCodeScanner.render(decodedText=>onScan(decodedText),error=>onError(error));return()=>{qrCodeScanner.clear().catch(err=>console.error('Error clearing QR scanner:',err));};}},[onScan,onError]);return/*#__PURE__*/_jsx(\"div\",{style:style,children:/*#__PURE__*/_jsx(\"div\",{ref:qrScannerRef,id:\"qr-reader\",style:{width:'100%',height:'100%'}})});};const Chapter3=()=>{const[showModal,setShowModal]=useState(false);const[scanData,setScanData]=useState('Not Found');const[jsonData,setJsonData]=useState(null);const[refreshCounter,setRefreshCounter]=useState(0);const[arrayOrder,setArrayOrder]=useState([]);const[cardImages,setCardImages]=useState([{id:1,name:'Placeholder 1',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:2,name:'Placeholder 2',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:3,name:'Placeholder 3',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:4,name:'Placeholder 4',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:5,name:'Placeholder 5',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:6,name:'Placeholder 6',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:7,name:'Placeholder 7',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:8,name:'Placeholder 8',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'}]);const{screenVisibility,handleScreen}=useScreenVisibility();const{cardData,handleTempArr,checkOrder,getCardNumber,currentArray,// getSetOrder,\ngetCardSet,cardSetType,getSetOrder,setCardSet}=useCardContext();// if (setCardSet) {\n//   setCardSet('set3');\n// } else {\n//   console.warn('setCardSet is not defined in the context.');\n// }\nuseEffect(()=>{setCardSet('set3');// triggers safe update now\n},[setCardSet]);const[goToSlide,setGoToSlide]=useState(undefined);const[currentCardIndex,setCurrentCardIndex]=useState(0);const lastFetchedURL=useRef(null);// currentArray.length = 0; // Clear the currentArray\nuseEffect(()=>{if(jsonData&&jsonData.id){const matchedCard=cardData.find(card=>card.id===jsonData.id);if(matchedCard){setCardImages(prevCards=>prevCards.map(card=>{var _jsonData$name,_jsonData$image,_jsonData$audio;return card.id===jsonData.id?{...card,name:(_jsonData$name=jsonData.name)!==null&&_jsonData$name!==void 0?_jsonData$name:card.name,image:(_jsonData$image=jsonData.image)!==null&&_jsonData$image!==void 0?_jsonData$image:card.image,audio:(_jsonData$audio=jsonData.audio)!==null&&_jsonData$audio!==void 0?_jsonData$audio:card.audio}:card;}));// Force rerender manually\n// setRefreshCounter(prev => prev + 1);\n}else{console.warn(`No matching card in cardData with id ${jsonData.id}`);}}// }, [jsonData, cardData]);\n},[jsonData]);// QR logic inside modal (reacts to scanData changes)\nconst openModal=()=>setShowModal(true);const closeModal=()=>setShowModal(false);const goBackToMain=()=>handleScreen('main');const goToChapter3=()=>handleScreen('chapter_3');const handleCardClick=cardIndex=>{// handleTempArr(cardData[cardIndex]);\nsetCurrentCardIndex(cardIndex);setShowModal(true);};const carouselSlides=cardImages.map((card,index)=>({key:index,content:/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleCardClick(index),className:\"flex flex-col items-center justify-center bg-white shadow-lg rounded p-4 cursor-pointer\",children:[/*#__PURE__*/_jsx(\"img\",{src:card.image,alt:card.name,style:{width:'200px',height:'200px'},className:\"w-64 h-64 object-contain\"}),/*#__PURE__*/_jsx(\"span\",{className:\"mt-2 text-xl font-bold\",children:getCardNumber(card.id)}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-800 text-lg\",children:card.name})]}),onClick:()=>setGoToSlide(index)}));const AnimatedDiv=animated('div');const indexRef=useRef(0);// Keeps track of the current index\nconst bind=useDrag(_ref2=>{let{down,movement:[mx],direction:[xDir],velocity}=_ref2;if(!down&&Math.hypot(...velocity)>0.2){const newIndex=xDir<0?Math.min(cardImages.length-1,indexRef.current+1)// Swipe Left\n:Math.max(0,indexRef.current-1);// Swipe Right\nindexRef.current=newIndex;setGoToSlide(newIndex);}},{filterTaps:true,axis:'x',pointer:{touch:true,buttons:[1]}});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to Chapter 3!\"}),/*#__PURE__*/_jsx(TypeAnimation,{sequence:[\"The detectiveâ€™s hand hovered over the cursed journal, but the sudden sound of footsteps froze him. Hooded cloaked figures emerged from the shadows with glowing eyes.\",1000],speed:50}),/*#__PURE__*/_jsxs(Modal,{isOpen:showModal,onRequestClose:closeModal,contentLabel:\"QR Code Modal\",className:\"modal-content\",overlayClassName:\"modal-overlay\",closeTimeoutMS:200,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"modal-title\",children:\"\\uD83E\\uDE9F QR Code Scanner\"}),/*#__PURE__*/_jsx(\"button\",{onClick:closeModal,className:\"close-btn\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsx(QrReader,{delay:300,style:{width:'100%'},onError:err=>console.error('QR scan error',err),onScan:async data=>{if(data){setScanData(data);console.log('Scanned data:',data);try{const response=await fetch(data);if(!response.ok)throw new Error(`HTTP error! status: ${response.status}`);const json=await response.json();//I Need this \nsetJsonData(json);// Update the JSON data display section\nif(json.id){// const matchedCard = cardData.find(card => card.id === json.id);\nconst matchedCard=cardData[json.id-1];// const matchedCard = cardData[currentCardIndex];\n// if (matchedCard) \n// {\nconst audio=new Audio(matchedCard.audio);// const audio = new Audio(json.audio);\naudio.play();// Open a new modal to display card details\nsetShowModal(false);// Close the QR modal\nconst newModal=window.open('','_blank','width=600,height=400');if(newModal){newModal.document.write(`\n                            <html>\n                            <head>\n                            <title>Card Details</title>\n                            <style>\n                              body {\n                              font-family: Arial, sans-serif;\n                              text-align: center;\n                              padding: 20px;\n                              }\n                              img {\n                              max-width: 100%;\n                              height: auto;\n                              }\n                              button {\n                              margin-top: 20px;\n                              padding: 10px 20px;\n                              background-color: #4CAF50;\n                              color: white;\n                              border: none;\n                              border-radius: 5px;\n                              cursor: pointer;\n                              }\n                              button:hover {\n                              background-color: #45a049;\n                              }\n                            </style>\n                            </head>\n                            <body>\n                            <h1>${matchedCard.name}</h1>\n                            <img src=\"${matchedCard.image}\" alt=\"${matchedCard.name}\" />\n                            <p>${currentCardIndex}</p>\n                            <button id=\"playAudio\">Play Audio</button>\n                            <button id=\"addToSequence\">Add to Sequence</button>\n                            <button id=\"closeModal\">Close Modal</button>\n\n\n                            <script>\n                              document.getElementById('playAudio').addEventListener('click', () => {\n                              const audio = new Audio('${matchedCard.audio}');\n                              audio.play();\n                              });\n                            </script>\n                            </body>\n                            </html>\n                            `);const closeModalButton=newModal.document.getElementById('closeModal');if(closeModalButton){closeModalButton.addEventListener('click',()=>{newModal.close();});}const addToSequenceButton=newModal.document.getElementById('addToSequence');if(addToSequenceButton){addToSequenceButton.addEventListener('click',()=>{// temparry.push(matchedCard.id);\nif(!arrayOrder.includes(matchedCard.id)){// currentArray.push(matchedCard.id);\n// setArrayOrder(prev => [...prev, matchedCard.id]);\nsetArrayOrder(prev=>[...prev,json.id]);setJsonData(matchedCard);// alert('Card added to the sequence!');\n// getCardSet(cardSetType);\n}else{alert('Card is already in the sequence!');}// setJsonData(matchedCard);\n// alert('Card added to the sequence!');\nnewModal.close();// currentArray.push(matchedCard.id);\n});}}// setJsonData(matchedCard);\n// console.log('Matched Card:', matchedCard);\n// } else {\n//   console.warn(`No matching card in cardData with id ${json.id}`);\n// }\n}// setJsonData(json);\ncloseModal();}catch(error){console.error('Fetch error:',error);setJsonData({error:'Failed to fetch data.'});}}}}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Scanned Data: \",scanData]})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:'300px',height:'400px',margin:'40px auto',overflow:'hidden'},children:/*#__PURE__*/_jsx(AnimatedDiv,{...bind(),style:{touchAction:'pan-y',cursor:'grab',height:'100%',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsx(Carousel,{// force remount when updated\nslides:carouselSlides,goToSlide:goToSlide,offsetRadius:2,showNavigation:true,animationConfig:config.gentle},refreshCounter)})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{currentArray.length=0;// Clear the currentArray\narrayOrder.length=0;// Clear the arrayOrder\nsetCardImages([{id:1,name:'Placeholder 1',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:2,name:'Placeholder 2',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:3,name:'Placeholder 3',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:4,name:'Placeholder 4',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:5,name:'Placeholder 5',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:6,name:'Placeholder 6',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:7,name:'Placeholder 7',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'},{id:8,name:'Placeholder 8',image:'/projects/blackwood-mansion/assets/images/ch3.png',audio:'Scan QR to update'}]);alert('Order has been cleared!');},children:\"Clear Order\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(arrayOrder.length===cardData.length){checkOrder(arrayOrder,cardSetType);}else{alert(`Please click all cards first. : ${JSON.stringify(arrayOrder,null,2)} \\n`+`Please click all cards first. : ${JSON.stringify(getSetOrder(cardSetType),null,2)} \\n`+`Please click all cards first. : ${cardSetType} \\n`);}// alert(`Please click all cards first. : ${JSON.stringify(jsonData, null, 2)}`);\n},children:\"Check Order\"}),/*#__PURE__*/_jsx(\"button\",{onClick:goBackToMain,children:\"Back to Main\"})]});};export default Chapter3;","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","TypeAnimation","Modal","Html5QrcodeScanner","useScreenVisibility","Carousel","config","useCardContext","useDrag","animated","jsx","_jsx","jsxs","_jsxs","setAppElement","CardContainer","div","QrReader","_ref","delay","style","onError","onScan","qrScannerRef","current","qrCodeScanner","id","fps","qrbox","render","decodedText","error","clear","catch","err","console","children","ref","width","height","Chapter3","showModal","setShowModal","scanData","setScanData","jsonData","setJsonData","refreshCounter","setRefreshCounter","arrayOrder","setArrayOrder","cardImages","setCardImages","name","image","audio","screenVisibility","handleScreen","cardData","handleTempArr","checkOrder","getCardNumber","currentArray","getCardSet","cardSetType","getSetOrder","setCardSet","goToSlide","setGoToSlide","undefined","currentCardIndex","setCurrentCardIndex","lastFetchedURL","matchedCard","find","card","prevCards","map","_jsonData$name","_jsonData$image","_jsonData$audio","warn","openModal","closeModal","goBackToMain","goToChapter3","handleCardClick","cardIndex","carouselSlides","index","key","content","onClick","className","src","alt","AnimatedDiv","indexRef","bind","_ref2","down","movement","mx","direction","xDir","velocity","Math","hypot","newIndex","min","length","max","filterTaps","axis","pointer","touch","buttons","sequence","speed","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","data","log","response","fetch","ok","Error","status","json","Audio","play","newModal","window","open","document","write","closeModalButton","getElementById","addEventListener","close","addToSequenceButton","includes","prev","alert","margin","overflow","touchAction","cursor","display","flexDirection","alignItems","justifyContent","slides","offsetRadius","showNavigation","animationConfig","gentle","JSON","stringify"],"sources":["/home/fnky/C0de/School/Special-Topics/Blackwood-Mansion/src/components/Chapters/Chapter3.tsx"],"sourcesContent":["import React, { CSSProperties, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { TypeAnimation } from 'react-type-animation';\nimport Modal from 'react-modal';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { useScreenVisibility } from '../ScreenVisibilityContext';\nimport Carousel from 'react-spring-3d-carousel';\nimport { config } from 'react-spring';\nimport { useCardContext } from '../CardContext';\n\nimport { useDrag } from '@use-gesture/react';\nimport { animated } from '@react-spring/web';\nimport { get } from 'http';\n\n\nModal.setAppElement('#root');\n\nconst CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\ninterface QrReaderProps {\n  delay: number;\n  style: CSSProperties;\n  onError: (err: any) => void;\n  onScan: (data: string | null) => void;\n}\n\nconst QrReader: React.FC<QrReaderProps> = ({ delay, style, onError, onScan }) => {\n  const qrScannerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (qrScannerRef.current) {\n      const qrCodeScanner = new Html5QrcodeScanner(\n        qrScannerRef.current.id,\n        {\n          fps: 10,\n          qrbox: 250,\n        },\n        false\n      );\n    \n      qrCodeScanner.render(\n        (decodedText: string) => onScan(decodedText),\n        (error: string) => onError(error)\n      );\n    \n      return () => {\n        qrCodeScanner.clear().catch((err) => console.error('Error clearing QR scanner:', err));\n      };\n    }\n  }, [onScan, onError]);\n\n  return (\n    <div style={style}>\n      <div ref={qrScannerRef} id=\"qr-reader\" style={{ width: '100%', height: '100%' }}></div>\n    </div>\n  );\n};\n\nconst Chapter3: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [scanData, setScanData] = useState<string>('Not Found');\n  const [jsonData, setJsonData] = useState<any>(null);\n  const [refreshCounter, setRefreshCounter] = useState(0);\n  const [arrayOrder, setArrayOrder] = useState<number[]>([]); \n\n\n  const [cardImages, setCardImages] = useState([\n    { id: 1, name: 'Placeholder 1', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n    { id: 2, name: 'Placeholder 2', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n    { id: 3, name: 'Placeholder 3', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n    { id: 4, name: 'Placeholder 4', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n    { id: 5, name: 'Placeholder 5', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n    { id: 6, name: 'Placeholder 6', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n    { id: 7, name: 'Placeholder 7', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n    { id: 8, name: 'Placeholder 8', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n  ]);\n\n  const { screenVisibility, handleScreen } = useScreenVisibility();\n  const {\n    cardData,\n    handleTempArr,\n    checkOrder,\n    getCardNumber,\n    currentArray,\n    // getSetOrder,\n    getCardSet,\n    cardSetType,\n    getSetOrder,\n    \n    setCardSet,\n    \n  } = useCardContext();\n\n  // if (setCardSet) {\n  //   setCardSet('set3');\n  // } else {\n  //   console.warn('setCardSet is not defined in the context.');\n  // }\n  useEffect(() => {\n    setCardSet('set3'); // triggers safe update now\n  }, [setCardSet]);\n\n  const [goToSlide, setGoToSlide] = useState<number | undefined>(undefined);\n  const [currentCardIndex, setCurrentCardIndex] = useState<number>(0);\n  const lastFetchedURL = useRef<string | null>(null);\n  // currentArray.length = 0; // Clear the currentArray\n\n  useEffect(() => {\n    if (jsonData && jsonData.id) {\n      const matchedCard = cardData.find(card => card.id === jsonData.id);\n      if (matchedCard) {\n        setCardImages(prevCards =>\n          prevCards.map(card =>\n            card.id === jsonData.id\n              ? {\n                  ...card,\n                  name: jsonData.name ?? card.name,\n                  image: jsonData.image ?? card.image,\n                  audio: jsonData.audio ?? card.audio,\n                }\n              : card\n          )\n        );\n        // Force rerender manually\n        // setRefreshCounter(prev => prev + 1);\n      } else {\n        console.warn(`No matching card in cardData with id ${jsonData.id}`);\n      }\n    }\n  // }, [jsonData, cardData]);\n  }, [jsonData]);\n\n\n  // QR logic inside modal (reacts to scanData changes)\n\n\n  const openModal = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n\n  const goBackToMain = () => handleScreen('main');\n  const goToChapter3 = () => handleScreen('chapter_3');\n\n  const handleCardClick = (cardIndex: number) => {\n    // handleTempArr(cardData[cardIndex]);\n    setCurrentCardIndex(cardIndex);\n    setShowModal(true);\n  };\n\n  const carouselSlides = cardImages.map((card, index) => ({\n    key: index,\n    content: (\n      <div\n        onClick={() => handleCardClick(index)}\n        className=\"flex flex-col items-center justify-center bg-white shadow-lg rounded p-4 cursor-pointer\"\n      >\n        <img\n          src={card.image}\n          alt={card.name}\n          style={{ width: '200px', height: '200px' }}\n          className=\"w-64 h-64 object-contain\"\n        />\n        <span className=\"mt-2 text-xl font-bold\">{getCardNumber(card.id)}</span>\n        <p className=\"text-gray-800 text-lg\">{card.name}</p>\n      </div>\n    ),\n    onClick: () => setGoToSlide(index),\n  }));\n\n  const AnimatedDiv = animated('div');\n  const indexRef = useRef(0); // Keeps track of the current index\n\n  const bind = useDrag(\n    ({ down, movement: [mx], direction: [xDir], velocity }) => {\n      if (!down && Math.hypot(...velocity) > 0.2) {\n        const newIndex =\n          xDir < 0\n            ? Math.min(cardImages.length - 1, indexRef.current + 1) // Swipe Left\n            : Math.max(0, indexRef.current - 1); // Swipe Right\n\n        indexRef.current = newIndex;\n        setGoToSlide(newIndex);\n      }\n    },\n    {\n      filterTaps: true,\n      axis: 'x',\n      pointer: { touch: true , buttons: [1]},\n    }\n  );\n\n  return (\n    <div>\n      <h1>Welcome to Chapter 3!</h1>\n\n      <TypeAnimation\n        sequence={[\n            \"The detectiveâ€™s hand hovered over the cursed journal, but the sudden sound of footsteps froze him. Hooded cloaked figures emerged from the shadows with glowing eyes.\",\n          1000,\n        ]}\n        speed={50}\n      />\n\n      <Modal\n        isOpen={showModal}\n        onRequestClose={closeModal}\n        contentLabel=\"QR Code Modal\"\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        closeTimeoutMS={200}\n      >\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\">ðŸªŸ QR Code Scanner</h2>\n          <button onClick={closeModal} className=\"close-btn\">\n            âœ•\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <QrReader\n            delay={300}\n            style={{ width: '100%' }}\n            onError={(err) => console.error('QR scan error', err)}\n            onScan={async (data: string | null) => {\n              if (data) {\n                setScanData(data);\n                console.log('Scanned data:', data);\n                try {\n                  const response = await fetch(data);\n                  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n                  const json = await response.json();\n\n                  //I Need this \n                    setJsonData(json);\n\n                    // Update the JSON data display section\n                    if (json.id) \n                    {\n                      // const matchedCard = cardData.find(card => card.id === json.id);\n                      const matchedCard = cardData[json.id - 1];\n                      // const matchedCard = cardData[currentCardIndex];\n                      \n\n                      // if (matchedCard) \n                      // {\n                        const audio = new Audio(matchedCard.audio);\n                        // const audio = new Audio(json.audio);\n                        audio.play();\n                        // Open a new modal to display card details\n                        setShowModal(false); // Close the QR modal\n                        const newModal = window.open('', '_blank', 'width=600,height=400');\n                        if (newModal) {\n                            newModal.document.write(`\n                            <html>\n                            <head>\n                            <title>Card Details</title>\n                            <style>\n                              body {\n                              font-family: Arial, sans-serif;\n                              text-align: center;\n                              padding: 20px;\n                              }\n                              img {\n                              max-width: 100%;\n                              height: auto;\n                              }\n                              button {\n                              margin-top: 20px;\n                              padding: 10px 20px;\n                              background-color: #4CAF50;\n                              color: white;\n                              border: none;\n                              border-radius: 5px;\n                              cursor: pointer;\n                              }\n                              button:hover {\n                              background-color: #45a049;\n                              }\n                            </style>\n                            </head>\n                            <body>\n                            <h1>${matchedCard.name}</h1>\n                            <img src=\"${matchedCard.image}\" alt=\"${matchedCard.name}\" />\n                            <p>${currentCardIndex}</p>\n                            <button id=\"playAudio\">Play Audio</button>\n                            <button id=\"addToSequence\">Add to Sequence</button>\n                            <button id=\"closeModal\">Close Modal</button>\n\n\n                            <script>\n                              document.getElementById('playAudio').addEventListener('click', () => {\n                              const audio = new Audio('${matchedCard.audio}');\n                              audio.play();\n                              });\n                            </script>\n                            </body>\n                            </html>\n                            `);\n\n                            const closeModalButton = newModal.document.getElementById('closeModal');\n                            if (closeModalButton) {\n                              closeModalButton.addEventListener('click', () => {\n                                newModal.close();\n                              });\n                            }\n\n                            const addToSequenceButton = newModal.document.getElementById('addToSequence');\n                            if (addToSequenceButton) {\n                              addToSequenceButton.addEventListener('click', () => {\n                                // temparry.push(matchedCard.id);\n                                if (!arrayOrder.includes(matchedCard.id)) \n                                {\n                                  // currentArray.push(matchedCard.id);\n                                  // setArrayOrder(prev => [...prev, matchedCard.id]);\n                                  setArrayOrder(prev => [...prev, json.id]);\n                                  setJsonData(matchedCard);\n                                  // alert('Card added to the sequence!');\n                                  // getCardSet(cardSetType);\n                                } \n                                else {\n                                 alert('Card is already in the sequence!');\n                                }\n                                // setJsonData(matchedCard);\n                                // alert('Card added to the sequence!');\n                                newModal.close();\n                                // currentArray.push(matchedCard.id);\n                              });\n                            }\n                        }\n\n                        // setJsonData(matchedCard);\n                        // console.log('Matched Card:', matchedCard);\n                      // } else {\n                      //   console.warn(`No matching card in cardData with id ${json.id}`);\n                      // }\n                    }\n                  // setJsonData(json);\n                  closeModal();\n                } catch (error) {\n                  console.error('Fetch error:', error);\n                  setJsonData({ error: 'Failed to fetch data.' });\n                }\n              }\n            }}\n          />\n          <p>Scanned Data: {scanData}</p>\n        </div>\n      </Modal>\n\n      {/* <div style={{ width: '500px', height: '400px', margin: '40px auto', overflow: 'hidden' }}> */}\n      <div style={{ width: '300px', height: '400px', margin: '40px auto', overflow: 'hidden' }}>\n        <AnimatedDiv {...bind()} style={{ touchAction: 'pan-y', cursor: 'grab', height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n        <Carousel\n          key={refreshCounter} // force remount when updated\n          slides={carouselSlides}\n          goToSlide={goToSlide}\n          offsetRadius={2}\n          showNavigation={true}\n          animationConfig={config.gentle}\n        />\n        </AnimatedDiv>\n\n      </div>\n\n      <button\n        onClick={() => {\n          currentArray.length = 0; // Clear the currentArray\n          arrayOrder.length = 0; // Clear the arrayOrder\n          \n          setCardImages([\n            { id: 1, name: 'Placeholder 1', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n            { id: 2, name: 'Placeholder 2', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n            { id: 3, name: 'Placeholder 3', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n            { id: 4, name: 'Placeholder 4', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n            { id: 5, name: 'Placeholder 5', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n            { id: 6, name: 'Placeholder 6', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n            { id: 7, name: 'Placeholder 7', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n            { id: 8, name: 'Placeholder 8', image: '/projects/blackwood-mansion/assets/images/ch3.png', audio: 'Scan QR to update' },\n          ]);\n\n          alert('Order has been cleared!');\n        }}\n      >\n        Clear Order\n      </button>\n\n      <button\n        onClick={() => {\n          if (arrayOrder.length === cardData.length) {\n            checkOrder(arrayOrder, cardSetType);\n          } else {\n            alert(`Please click all cards first. : ${JSON.stringify(arrayOrder, null, 2)} \\n` + \n            `Please click all cards first. : ${JSON.stringify(getSetOrder(cardSetType), null, 2)} \\n` + \n            \n            `Please click all cards first. : ${cardSetType} \\n`);\n          }\n          \n          // alert(`Please click all cards first. : ${JSON.stringify(jsonData, null, 2)}`);\n        }}\n      >\n        Check Order\n      </button>\n\n      <button onClick={goBackToMain}>Back to Main</button>\n      {/* <button onClick={goToChapter3}>Go to Chapter 3</button> */}\n    </div>\n  );\n};\n\nexport default Chapter3;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}