{"ast":null,"code":"var _jsxFileName = \"/home/fnky/C0de/School/Special-Topics/Blackwood-Mansion/src/components/Chapters/Chapter1.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { TypeAnimation } from 'react-type-animation';\nimport Modal from 'react-modal';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { useScreenVisibility } from '../ScreenVisibilityContext';\nimport Carousel from 'react-spring-3d-carousel';\nimport { config } from 'react-spring';\nimport { useCardContext } from '../CardContext';\nimport { useDrag } from '@use-gesture/react';\nimport { animated } from '@react-spring/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\nconst QrReader = ({\n  delay,\n  style,\n  onError,\n  onScan\n}) => {\n  _s();\n  const qrScannerRef = useRef(null);\n  useEffect(() => {\n    if (qrScannerRef.current) {\n      const qrCodeScanner = new Html5QrcodeScanner(qrScannerRef.current.id, {\n        fps: 10,\n        qrbox: 250\n      }, false);\n      qrCodeScanner.render(decodedText => onScan(decodedText), error => onError(error));\n      return () => {\n        qrCodeScanner.clear().catch(err => console.error('Error clearing QR scanner:', err));\n      };\n    }\n  }, [onScan, onError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: qrScannerRef,\n      id: \"qr-reader\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(QrReader, \"3twh9zgSZtsFTJmb3G61ht7MTf4=\");\n_c = QrReader;\nconst Chapter1 = () => {\n  _s2();\n  const [showModal, setShowModal] = useState(false);\n  const [scanData, setScanData] = useState('Not Found');\n  const [jsonData, setJsonData] = useState(null);\n  const [refreshCounter, setRefreshCounter] = useState(0);\n  const [cardImages, setCardImages] = useState([{\n    id: 1,\n    name: 'Placeholder 1',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 2,\n    name: 'Placeholder 2',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 3,\n    name: 'Placeholder 3',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 4,\n    name: 'Placeholder 4',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 5,\n    name: 'Placeholder 5',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 6,\n    name: 'Placeholder 6',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 7,\n    name: 'Placeholder 7',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 8,\n    name: 'Placeholder 8',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }, {\n    id: 9,\n    name: 'Placeholder 9',\n    image: '/projects/blackwood-mansion/assets/images/ch1.png',\n    audio: 'Scan QR to update'\n  }]);\n  const {\n    screenVisibility,\n    handleScreen\n  } = useScreenVisibility();\n  const {\n    cardData,\n    handleTempArr,\n    checkOrder,\n    getCardNumber,\n    currentArray\n    // setCardSet,\n  } = useCardContext();\n\n  // setCardSet('set1');\n\n  const [goToSlide, setGoToSlide] = useState(undefined);\n  const lastFetchedURL = useRef(null);\n  currentArray.length = 0; // Clear the currentArray\n\n  useEffect(() => {\n    if (jsonData && jsonData.id) {\n      const matchedCard = cardData.find(card => card.id === jsonData.id);\n      if (matchedCard) {\n        setCardImages(prevCards => prevCards.map(card => {\n          var _jsonData$name, _jsonData$image, _jsonData$audio;\n          return card.id === jsonData.id ? {\n            ...card,\n            name: (_jsonData$name = jsonData.name) !== null && _jsonData$name !== void 0 ? _jsonData$name : card.name,\n            image: (_jsonData$image = jsonData.image) !== null && _jsonData$image !== void 0 ? _jsonData$image : card.image,\n            audio: (_jsonData$audio = jsonData.audio) !== null && _jsonData$audio !== void 0 ? _jsonData$audio : card.audio\n          } : card;\n        }));\n        // Force rerender manually\n        // setRefreshCounter(prev => prev + 1);\n      } else {\n        console.warn(`No matching card in cardData with id ${jsonData.id}`);\n      }\n    }\n    // }, [jsonData, cardData]);\n  }, [jsonData]);\n\n  // QR logic inside modal (reacts to scanData changes)\n\n  const openModal = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n  const goBackToMain = () => handleScreen('main');\n  const goToChapter2 = () => handleScreen('chapter_2');\n  const handleCardClick = cardIndex => {\n    handleTempArr(cardData[cardIndex]);\n    setShowModal(true);\n  };\n  const carouselSlides = cardImages.map((card, index) => ({\n    key: index,\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleCardClick(index),\n      className: \"flex flex-col items-center justify-center bg-white shadow-lg rounded p-4 cursor-pointer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: card.image,\n        alt: card.name,\n        style: {\n          width: '200px',\n          height: '200px'\n        },\n        className: \"w-64 h-64 object-contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mt-2 text-xl font-bold\",\n        children: getCardNumber(card.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-800 text-lg\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this),\n    onClick: () => setGoToSlide(index)\n  }));\n  const AnimatedDiv = animated('div');\n  const indexRef = useRef(0); // Keeps track of the current index\n\n  const bind = useDrag(({\n    down,\n    movement: [mx],\n    direction: [xDir],\n    velocity\n  }) => {\n    if (!down && Math.hypot(...velocity) > 0.2) {\n      const newIndex = xDir < 0 ? Math.min(cardImages.length - 1, indexRef.current + 1) // Swipe Left\n      : Math.max(0, indexRef.current - 1); // Swipe Right\n\n      indexRef.current = newIndex;\n      setGoToSlide(newIndex);\n    }\n  }, {\n    filterTaps: true,\n    axis: 'x',\n    pointer: {\n      touch: true,\n      buttons: [1]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Chapter 1!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n      sequence: [\"It was a dark, stormy evening when the call came in. A nervous voice on the other end, trembling with something deeper than fear. The caretaker of Blackwood Mansion desperate for help. The house, passed down through generations, held more than memories. It held shadows. Secrets buried beneath its foundations. And now... something had begun to stir.\", 1000],\n      speed: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      onRequestClose: closeModal,\n      contentLabel: \"QR Code Modal\",\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      closeTimeoutMS: 200,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-title\",\n          children: \"\\uD83E\\uDE9F QR Code Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"close-btn\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(QrReader, {\n          delay: 300,\n          style: {\n            width: '100%'\n          },\n          onError: err => console.error('QR scan error', err),\n          onScan: async data => {\n            if (data) {\n              setScanData(data);\n              console.log('Scanned data:', data);\n              try {\n                const response = await fetch(data);\n                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n                const json = await response.json();\n\n                // setJsonData(json);\n\n                // Update the JSON data display section\n                if (json.id) {\n                  const matchedCard = cardData.find(card => card.id === json.id);\n                  if (matchedCard) {\n                    const audio = new Audio(matchedCard.audio);\n                    audio.play();\n                    // Open a new modal to display card details\n                    setShowModal(false); // Close the QR modal\n                    const newModal = window.open('', '_blank', 'width=600,height=400');\n                    if (newModal) {\n                      newModal.document.write(`\n                            <html>\n                            <head>\n                            <title>Card Details</title>\n                            <style>\n                              body {\n                              font-family: Arial, sans-serif;\n                              text-align: center;\n                              padding: 20px;\n                              }\n                              img {\n                              max-width: 100%;\n                              height: auto;\n                              }\n                              button {\n                              margin-top: 20px;\n                              padding: 10px 20px;\n                              background-color: #4CAF50;\n                              color: white;\n                              border: none;\n                              border-radius: 5px;\n                              cursor: pointer;\n                              }\n                              button:hover {\n                              background-color: #45a049;\n                              }\n                            </style>\n                            </head>\n                            <body>\n                            <h1>${matchedCard.name}</h1>\n                            <img src=\"${matchedCard.image}\" alt=\"${matchedCard.name}\" />\n                            <button id=\"playAudio\">Play Audio</button>\n                            <button id=\"addToSequence\">Add to Sequence</button>\n                            <button id=\"closeModal\">Close Modal</button>\n\n\n                            <script>\n                              document.getElementById('playAudio').addEventListener('click', () => {\n                              const audio = new Audio('${matchedCard.audio}');\n                              audio.play();\n                              });\n                            </script>\n                            </body>\n                            </html>\n                            `);\n                      const closeModalButton = newModal.document.getElementById('closeModal');\n                      if (closeModalButton) {\n                        closeModalButton.addEventListener('click', () => {\n                          newModal.close();\n                        });\n                      }\n                      const addToSequenceButton = newModal.document.getElementById('addToSequence');\n                      if (addToSequenceButton) {\n                        addToSequenceButton.addEventListener('click', () => {\n                          // temparry.push(matchedCard.id);\n                          // if (!currentArray.includes(matchedCard.id)) \n                          {\n                            currentArray.push(matchedCard.id);\n                            setJsonData(matchedCard);\n                            alert('Card added to the sequence!');\n                          }\n                          //else {\n                          //  alert('Card is already in the sequence!');\n                          //}\n                          // setJsonData(matchedCard);\n                          // alert('Card added to the sequence!');\n                          newModal.close();\n                          // currentArray.push(matchedCard.id);\n                        });\n                      }\n                    }\n\n                    // setJsonData(matchedCard);\n                    console.log('Matched Card:', matchedCard);\n                  } else {\n                    console.warn(`No matching card in cardData with id ${json.id}`);\n                  }\n                }\n                // setJsonData(json);\n                closeModal();\n              } catch (error) {\n                console.error('Fetch error:', error);\n                setJsonData({\n                  error: 'Failed to fetch data.'\n                });\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Scanned Data: \", scanData]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        height: '400px',\n        margin: '40px auto',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(AnimatedDiv, {\n        ...bind(),\n        style: {\n          touchAction: 'pan-y',\n          cursor: 'grab',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          // force remount when updated\n          slides: carouselSlides,\n          goToSlide: goToSlide,\n          offsetRadius: 2,\n          showNavigation: true,\n          animationConfig: config.gentle\n        }, refreshCounter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        currentArray.length = 0; // Clear the currentArray\n\n        setCardImages([{\n          id: 1,\n          name: 'Placeholder 1',\n          image: '/projects/blackwood-mansion/assets/images/ch1.png',\n          audio: 'Scan QR to update'\n        }, {\n          id: 2,\n          name: 'Placeholder 2',\n          image: '/projects/blackwood-mansion/assets/images/ch1.png',\n          audio: 'Scan QR to update'\n        }, {\n          id: 3,\n          name: 'Placeholder 3',\n          image: '/projects/blackwood-mansion/assets/images/ch1.png',\n          audio: 'Scan QR to update'\n        }, {\n          id: 4,\n          name: 'Placeholder 4',\n          image: '/projects/blackwood-mansion/assets/images/ch1.png',\n          audio: 'Scan QR to update'\n        }, {\n          id: 5,\n          name: 'Placeholder 5',\n          image: '/projects/blackwood-mansion/assets/images/ch1.png',\n          audio: 'Scan QR to update'\n        }, {\n          id: 6,\n          name: 'Placeholder 6',\n          image: '/projects/blackwood-mansion/assets/images/ch1.png',\n          audio: 'Scan QR to update'\n        }, {\n          id: 7,\n          name: 'Placeholder 7',\n          image: '/projects/blackwood-mansion/assets/images/ch1.png',\n          audio: 'Scan QR to update'\n        }, {\n          id: 8,\n          name: 'Placeholder 8',\n          image: '/projects/blackwood-mansion/assets/images/ch1.png',\n          audio: 'Scan QR to update'\n        }, {\n          id: 9,\n          name: 'Placeholder 9',\n          image: '/projects/blackwood-mansion/assets/images/ch1.png',\n          audio: 'Scan QR to update'\n        }]);\n        alert('Order has been cleared!');\n      },\n      children: \"Clear Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (currentArray.length === cardData.length) {\n          checkOrder(currentArray);\n        } else {\n          alert(`Please click all cards first. : ${JSON.stringify(currentArray, null, 2)}`);\n        }\n      },\n      children: \"Check Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goBackToMain,\n      children: \"Back to Main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToChapter2,\n      children: \"Go to Chapter 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chapter1, \"ghWVjhFxt15wzy/Bjw1KNth6n78=\", false, function () {\n  return [useScreenVisibility, useCardContext, useDrag];\n});\n_c2 = Chapter1;\nexport default Chapter1;\nvar _c, _c2;\n$RefreshReg$(_c, \"QrReader\");\n$RefreshReg$(_c2, \"Chapter1\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","TypeAnimation","Modal","Html5QrcodeScanner","useScreenVisibility","Carousel","config","useCardContext","useDrag","animated","jsxDEV","_jsxDEV","setAppElement","CardContainer","div","QrReader","delay","style","onError","onScan","_s","qrScannerRef","current","qrCodeScanner","id","fps","qrbox","render","decodedText","error","clear","catch","err","console","children","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chapter1","_s2","showModal","setShowModal","scanData","setScanData","jsonData","setJsonData","refreshCounter","setRefreshCounter","cardImages","setCardImages","name","image","audio","screenVisibility","handleScreen","cardData","handleTempArr","checkOrder","getCardNumber","currentArray","goToSlide","setGoToSlide","undefined","lastFetchedURL","length","matchedCard","find","card","prevCards","map","_jsonData$name","_jsonData$image","_jsonData$audio","warn","openModal","closeModal","goBackToMain","goToChapter2","handleCardClick","cardIndex","carouselSlides","index","key","content","onClick","className","src","alt","AnimatedDiv","indexRef","bind","down","movement","mx","direction","xDir","velocity","Math","hypot","newIndex","min","max","filterTaps","axis","pointer","touch","buttons","sequence","speed","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","data","log","response","fetch","ok","Error","status","json","Audio","play","newModal","window","open","document","write","closeModalButton","getElementById","addEventListener","close","addToSequenceButton","push","alert","margin","overflow","touchAction","cursor","display","flexDirection","alignItems","justifyContent","slides","offsetRadius","showNavigation","animationConfig","gentle","JSON","stringify","_c2","$RefreshReg$"],"sources":["/home/fnky/C0de/School/Special-Topics/Blackwood-Mansion/src/components/Chapters/Chapter1.tsx"],"sourcesContent":["import React, { CSSProperties, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { TypeAnimation } from 'react-type-animation';\nimport Modal from 'react-modal';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { useScreenVisibility } from '../ScreenVisibilityContext';\nimport Carousel from 'react-spring-3d-carousel';\nimport { config } from 'react-spring';\nimport { useCardContext } from '../CardContext';\n\nimport { useDrag } from '@use-gesture/react';\nimport { animated } from '@react-spring/web';\n\n\nModal.setAppElement('#root');\n\nconst CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\ninterface QrReaderProps {\n  delay: number;\n  style: CSSProperties;\n  onError: (err: any) => void;\n  onScan: (data: string | null) => void;\n}\n\nconst QrReader: React.FC<QrReaderProps> = ({ delay, style, onError, onScan }) => {\n  const qrScannerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (qrScannerRef.current) {\n      const qrCodeScanner = new Html5QrcodeScanner(\n        qrScannerRef.current.id,\n        {\n          fps: 10,\n          qrbox: 250,\n        },\n        false\n      );\n    \n      qrCodeScanner.render(\n        (decodedText: string) => onScan(decodedText),\n        (error: string) => onError(error)\n      );\n    \n      return () => {\n        qrCodeScanner.clear().catch((err) => console.error('Error clearing QR scanner:', err));\n      };\n    }\n  }, [onScan, onError]);\n\n  return (\n    <div style={style}>\n      <div ref={qrScannerRef} id=\"qr-reader\" style={{ width: '100%', height: '100%' }}></div>\n    </div>\n  );\n};\n\nconst Chapter1: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [scanData, setScanData] = useState<string>('Not Found');\n  const [jsonData, setJsonData] = useState<any>(null);\n  const [refreshCounter, setRefreshCounter] = useState(0);\n\n\n  const [cardImages, setCardImages] = useState([\n    { id: 1, name: 'Placeholder 1', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 2, name: 'Placeholder 2', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 3, name: 'Placeholder 3', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 4, name: 'Placeholder 4', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 5, name: 'Placeholder 5', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 6, name: 'Placeholder 6', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 7, name: 'Placeholder 7', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 8, name: 'Placeholder 8', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n    { id: 9, name: 'Placeholder 9', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n  ]);\n\n  const { screenVisibility, handleScreen } = useScreenVisibility();\n  const {\n    cardData,\n    handleTempArr,\n    checkOrder,\n    getCardNumber,\n    currentArray,\n    // setCardSet,\n    \n  } = useCardContext();\n\n  // setCardSet('set1');\n\n  const [goToSlide, setGoToSlide] = useState<number | undefined>(undefined);\n  const lastFetchedURL = useRef<string | null>(null);\n  currentArray.length = 0; // Clear the currentArray\n\n  useEffect(() => {\n    if (jsonData && jsonData.id) {\n      const matchedCard = cardData.find(card => card.id === jsonData.id);\n      if (matchedCard) {\n        setCardImages(prevCards =>\n          prevCards.map(card =>\n            card.id === jsonData.id\n              ? {\n                  ...card,\n                  name: jsonData.name ?? card.name,\n                  image: jsonData.image ?? card.image,\n                  audio: jsonData.audio ?? card.audio,\n                }\n              : card\n          )\n        );\n        // Force rerender manually\n        // setRefreshCounter(prev => prev + 1);\n      } else {\n        console.warn(`No matching card in cardData with id ${jsonData.id}`);\n      }\n    }\n  // }, [jsonData, cardData]);\n  }, [jsonData]);\n\n\n  // QR logic inside modal (reacts to scanData changes)\n\n\n  const openModal = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n\n  const goBackToMain = () => handleScreen('main');\n  const goToChapter2 = () => handleScreen('chapter_2');\n\n  const handleCardClick = (cardIndex: number) => {\n    handleTempArr(cardData[cardIndex]);\n    setShowModal(true);\n  };\n\n  const carouselSlides = cardImages.map((card, index) => ({\n    key: index,\n    content: (\n      <div\n        onClick={() => handleCardClick(index)}\n        className=\"flex flex-col items-center justify-center bg-white shadow-lg rounded p-4 cursor-pointer\"\n      >\n        <img\n          src={card.image}\n          alt={card.name}\n          style={{ width: '200px', height: '200px' }}\n          className=\"w-64 h-64 object-contain\"\n        />\n        <span className=\"mt-2 text-xl font-bold\">{getCardNumber(card.id)}</span>\n        <p className=\"text-gray-800 text-lg\">{card.name}</p>\n      </div>\n    ),\n    onClick: () => setGoToSlide(index),\n  }));\n\n  const AnimatedDiv = animated('div');\n  const indexRef = useRef(0); // Keeps track of the current index\n\n  const bind = useDrag(\n    ({ down, movement: [mx], direction: [xDir], velocity }) => {\n      if (!down && Math.hypot(...velocity) > 0.2) {\n        const newIndex =\n          xDir < 0\n            ? Math.min(cardImages.length - 1, indexRef.current + 1) // Swipe Left\n            : Math.max(0, indexRef.current - 1); // Swipe Right\n\n        indexRef.current = newIndex;\n        setGoToSlide(newIndex);\n      }\n    },\n    {\n      filterTaps: true,\n      axis: 'x',\n      pointer: { touch: true , buttons: [1]},\n    }\n  );\n\n  return (\n    <div>\n      <h1>Welcome to Chapter 1!</h1>\n\n      <TypeAnimation\n        sequence={[\n          \"It was a dark, stormy evening when the call came in. A nervous voice on the other end, trembling with something deeper than fear. The caretaker of Blackwood Mansion desperate for help. The house, passed down through generations, held more than memories. It held shadows. Secrets buried beneath its foundations. And now... something had begun to stir.\",\n          1000,\n        ]}\n        speed={50}\n      />\n\n      <Modal\n        isOpen={showModal}\n        onRequestClose={closeModal}\n        contentLabel=\"QR Code Modal\"\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        closeTimeoutMS={200}\n      >\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\">🪟 QR Code Scanner</h2>\n          <button onClick={closeModal} className=\"close-btn\">\n            ✕\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <QrReader\n            delay={300}\n            style={{ width: '100%' }}\n            onError={(err) => console.error('QR scan error', err)}\n            onScan={async (data: string | null) => {\n              if (data) {\n                setScanData(data);\n                console.log('Scanned data:', data);\n                try {\n                  const response = await fetch(data);\n                  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n                  const json = await response.json();\n\n                    // setJsonData(json);\n\n                    // Update the JSON data display section\n                    if (json.id) \n                    {\n                      const matchedCard = cardData.find(card => card.id === json.id);\n\n                      if (matchedCard) \n                      {\n                        const audio = new Audio(matchedCard.audio);\n                        audio.play();\n                        // Open a new modal to display card details\n                        setShowModal(false); // Close the QR modal\n                        const newModal = window.open('', '_blank', 'width=600,height=400');\n                        if (newModal) {\n                            newModal.document.write(`\n                            <html>\n                            <head>\n                            <title>Card Details</title>\n                            <style>\n                              body {\n                              font-family: Arial, sans-serif;\n                              text-align: center;\n                              padding: 20px;\n                              }\n                              img {\n                              max-width: 100%;\n                              height: auto;\n                              }\n                              button {\n                              margin-top: 20px;\n                              padding: 10px 20px;\n                              background-color: #4CAF50;\n                              color: white;\n                              border: none;\n                              border-radius: 5px;\n                              cursor: pointer;\n                              }\n                              button:hover {\n                              background-color: #45a049;\n                              }\n                            </style>\n                            </head>\n                            <body>\n                            <h1>${matchedCard.name}</h1>\n                            <img src=\"${matchedCard.image}\" alt=\"${matchedCard.name}\" />\n                            <button id=\"playAudio\">Play Audio</button>\n                            <button id=\"addToSequence\">Add to Sequence</button>\n                            <button id=\"closeModal\">Close Modal</button>\n\n\n                            <script>\n                              document.getElementById('playAudio').addEventListener('click', () => {\n                              const audio = new Audio('${matchedCard.audio}');\n                              audio.play();\n                              });\n                            </script>\n                            </body>\n                            </html>\n                            `);\n\n                            const closeModalButton = newModal.document.getElementById('closeModal');\n                            if (closeModalButton) {\n                              closeModalButton.addEventListener('click', () => {\n                                newModal.close();\n                              });\n                            }\n\n                            const addToSequenceButton = newModal.document.getElementById('addToSequence');\n                            if (addToSequenceButton) {\n                              addToSequenceButton.addEventListener('click', () => {\n                                // temparry.push(matchedCard.id);\n                                // if (!currentArray.includes(matchedCard.id)) \n                                {\n                                  currentArray.push(matchedCard.id);\n                                  setJsonData(matchedCard);\n                                  alert('Card added to the sequence!');\n                                } \n                                //else {\n                                //  alert('Card is already in the sequence!');\n                                //}\n                                // setJsonData(matchedCard);\n                                // alert('Card added to the sequence!');\n                                newModal.close();\n                                // currentArray.push(matchedCard.id);\n                              });\n                            }\n                        }\n\n                        // setJsonData(matchedCard);\n                        console.log('Matched Card:', matchedCard);\n                      } else {\n                        console.warn(`No matching card in cardData with id ${json.id}`);\n                      }\n                    }\n                  // setJsonData(json);\n                  closeModal();\n                } catch (error) {\n                  console.error('Fetch error:', error);\n                  setJsonData({ error: 'Failed to fetch data.' });\n                }\n              }\n            }}\n          />\n          <p>Scanned Data: {scanData}</p>\n        </div>\n      </Modal>\n\n      {/* <div style={{ width: '500px', height: '400px', margin: '40px auto', overflow: 'hidden' }}> */}\n      <div style={{ width: '300px', height: '400px', margin: '40px auto', overflow: 'hidden' }}>\n        <AnimatedDiv {...bind()} style={{ touchAction: 'pan-y', cursor: 'grab', height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n        <Carousel\n          key={refreshCounter} // force remount when updated\n          slides={carouselSlides}\n          goToSlide={goToSlide}\n          offsetRadius={2}\n          showNavigation={true}\n          animationConfig={config.gentle}\n        />\n        </AnimatedDiv>\n\n      </div>\n\n      <button\n        onClick={() => {\n          currentArray.length = 0; // Clear the currentArray\n          \n          setCardImages([\n            { id: 1, name: 'Placeholder 1', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n            { id: 2, name: 'Placeholder 2', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n            { id: 3, name: 'Placeholder 3', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n            { id: 4, name: 'Placeholder 4', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n            { id: 5, name: 'Placeholder 5', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n            { id: 6, name: 'Placeholder 6', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n            { id: 7, name: 'Placeholder 7', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n            { id: 8, name: 'Placeholder 8', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n            { id: 9, name: 'Placeholder 9', image: '/projects/blackwood-mansion/assets/images/ch1.png', audio: 'Scan QR to update' },\n          ]);\n\n          alert('Order has been cleared!');\n        }}\n      >\n        Clear Order\n      </button>\n\n      <button\n        onClick={() => {\n          if (currentArray.length === cardData.length) {\n            checkOrder(currentArray);\n          } else {\n            alert(`Please click all cards first. : ${JSON.stringify(currentArray, null, 2)}`);\n          }\n        }}\n      >\n        Check Order\n      </button>\n\n      <button onClick={goBackToMain}>Back to Main</button>\n      <button onClick={goToChapter2}>Go to Chapter 2</button>\n    </div>\n  );\n};\n\nexport default Chapter1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}